{"version":3,"sources":["views/Nft/market/Collections/index.tsx","components/PageHeader/PageHeader.tsx"],"names":["Collectible","t","useTranslation","collections","useGetCollections","as","scale","color","textAlign","Object","keys","map","key","collection","to","nftsBaseUrl","address","alignItems","src","avatar","width","height","mr","name","totalVolumeBNB","ml","numberTokensListed","totalSupply","Outer","styled","Box","theme","background","colors","gradients","bubblegum","Inner","Container","PageHeader","children","props"],"mappings":"8HAAA,mFA8DeA,UArDK,WAClB,IAAQC,EAAMC,cAAND,EACFE,EAAcC,cACpB,OACE,qCACE,cAAC,IAAD,UACE,cAAC,KAAD,CAASC,GAAG,KAAKC,MAAM,MAAMC,MAAM,YAAnC,SACGN,EAAE,mBAGP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,gCACE,+BACE,cAAC,KAAD,CAAIO,UAAU,OAAd,SAAsBP,EAAE,gBACxB,cAAC,KAAD,CAAIO,UAAU,OAAd,SAAsBP,EAAE,YACxB,cAAC,KAAD,CAAIO,UAAU,OAAd,SAAsBP,EAAE,WACxB,cAAC,KAAD,CAAIO,UAAU,OAAd,SAAsBP,EAAE,iBAG5B,gCACGQ,OAAOC,KAAKP,GAAaQ,KAAI,SAACC,GAC7B,IAAMC,EAAaV,EAAYS,GAC/B,OACE,+BACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAME,GAAE,UAAKC,IAAL,wBAAgCF,EAAWG,SAAnD,SACE,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAeC,IAAKL,EAAWM,OAAQC,MAAO,GAAIC,OAAQ,GAAIC,GAAG,SAChET,EAAWU,YAIlB,cAAC,KAAD,UACE,eAAC,IAAD,CAAMN,WAAW,SAAjB,UACGJ,EAAWW,eACZ,cAAC,IAAD,CAAsBC,GAAG,aAG7B,cAAC,KAAD,UAAKZ,EAAWa,qBAChB,cAAC,KAAD,UAAKb,EAAWc,kC,mKC5C9BC,EAAQC,YAAOC,IAAPD,CAAH,gDACK,gBAAGE,EAAH,EAAGA,MAAH,SAAUC,YAA+BD,EAAME,OAAOC,UAAUC,aAG1EC,EAAQP,YAAOQ,IAAPR,CAAH,2EAWIS,EAN+B,SAAC,GAAD,IAAGN,EAAH,EAAGA,WAAYO,EAAf,EAAeA,SAAaC,EAA5B,wBAC5C,cAACZ,EAAD,yBAAOI,WAAYA,GAAgBQ,GAAnC,aACE,cAACJ,EAAD,UAAQG","file":"static/js/40.8373922d.chunk.js","sourcesContent":["import React from 'react'\nimport { Table, Th, Td, Card, ProfileAvatar, Flex, BnbUsdtPairTokenIcon, Heading } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useGetCollections } from 'state/nftMarket/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst Collectible = () => {\n  const { t } = useTranslation()\n  const collections = useGetCollections()\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Collections')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        <Card>\n          <Table>\n            <thead>\n              <tr>\n                <Th textAlign=\"left\">{t('Collection')}</Th>\n                <Th textAlign=\"left\">{t('Volume')}</Th>\n                <Th textAlign=\"left\">{t('Items')}</Th>\n                <Th textAlign=\"left\">{t('Supply')}</Th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(collections).map((key) => {\n                const collection = collections[key]\n                return (\n                  <tr>\n                    <Td>\n                      <Link to={`${nftsBaseUrl}/collections/${collection.address}`}>\n                        <Flex alignItems=\"center\">\n                          <ProfileAvatar src={collection.avatar} width={48} height={48} mr=\"16px\" />\n                          {collection.name}\n                        </Flex>\n                      </Link>\n                    </Td>\n                    <Td>\n                      <Flex alignItems=\"center\">\n                        {collection.totalVolumeBNB}\n                        <BnbUsdtPairTokenIcon ml=\"8px\" />\n                      </Flex>\n                    </Td>\n                    <Td>{collection.numberTokensListed}</Td>\n                    <Td>{collection.totalSupply}</Td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n        </Card>\n      </Page>\n    </>\n  )\n}\n\nexport default Collectible\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n"],"sourceRoot":""}