{"version":3,"sources":["components/Layout/Flex.tsx","utils/latinise.ts","components/SearchInput/SearchInput.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/hooks/useUnstakeFarms.ts","views/Farms/hooks/useStakeFarms.ts","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/hooks/useHarvestFarm.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/hooks/useApproveFarm.ts","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx","components/PageHeader/PageHeader.tsx","components/Tags.tsx","components/Select/Select.tsx","components/TokenImage/index.tsx","components/Loading.tsx"],"names":["FlexLayout","styled","div","Latinise","latin_map","τ","Τ","latinise","input","replace","x","StyledInput","Input","InputWrapper","theme","mediaQueries","sm","SearchInput","onChangeCallback","onChange","placeholder","useState","searchText","setSearchText","t","useTranslation","debouncedOnChange","useMemo","debounce","e","value","target","Wrapper","colors","primary","ExpandableSectionButton","onClick","expanded","role","color","bold","defaultProps","EditingCurrency","CalculatorMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBnbAddress","tokens","wbnb","address","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","width","height","href","symbol","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","token","quoteToken","alignItems","mb","variant","primaryToken","secondaryToken","flexDirection","split","ml","StyledSpacer","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledTokenInput","isWarning","shadows","warning","inset","text","xs","StyledErrorMessage","Text","ModalInput","max","onSelectMax","inputTitle","decimals","isBalanceZero","style","position","pl","fontSize","balance","balanceUnits","parseUnits","formatBigNumber","displayBalance","pattern","inputMode","step","min","scale","mr","external","Footer","dropdown","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","apr","displayApr","autoCompoundFrequency","linkLabel","linkHref","performanceFee","isExpanded","setIsExpanded","useTooltip","my","placement","tooltipOffset","multiplierRef","targetRef","multiplierTooltip","tooltip","multiplierTooltipVisible","tooltipVisible","gridRowCount","apy","getApy","toFixed","p","prev","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","ref","display","mt","fee","compoundingIndexToFrequency","initialState","controls","compounding","compoundingFrequency","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","data","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","state","action","type","payload","toggledCompounding","index","PRINCIPAL_BASED_ON_ROI","parseFloat","currencyAfterChange","TOKEN","useRoiCalculatorReducer","stakingTokenPrice","earningTokenPrice","useReducer","dispatch","useEffect","principalInUSDAsNumber","compoundFrequency","interestBreakdown","getInterestBreakdown","principalInUSD","hasInterest","Number","isNaN","roiAsUSD","getRoi","amountEarned","amountInvested","principalForExpectedRoi","getPrincipalForInterest","principalUSD","principalToken","BigNumber","setPrincipalFromUSDValue","amount","principalAsTokenBN","gt","setPrincipalFromTokenValue","useCallback","principalAsUsdBN","times","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","toNumber","MILLION","RoiCardWrapper","Box","radii","default","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","background","RoiCard","earningTokenSymbol","calculatorState","inputRef","useRef","current","focus","onEnterEditing","textTransform","event","currentTarget","toLocaleString","minimumFractionDigits","maximumFractionDigits","rotate","keyframes","ArrowContainer","AnimatedArrow","key","setKey","prevKey","prevId","parseInt","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenBalance","stakingTokenSymbol","initialValue","account","useActiveWeb3React","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","onUserInput","title","headerBackground","asset","currencyValue","innerRef","unit","switchEditingUnits","onFocus","lte","getBalanceNumber","toString","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","AnnualRoiContainer","AnnualRoiDisplay","DepositModal","stakedBalance","onConfirm","tokenName","lpPrice","cakePrice","val","setVal","useToast","toastSuccess","toastError","pendingTx","setPendingTx","showRoiCalculator","setShowRoiCalculator","fullBalance","getFullDisplayBalance","lpTokensToStake","fullBalanceNumber","usdToStake","annualRoi","formattedAnnualRoi","formatNumber","handleChange","validity","valid","handleSelectMax","plus","isFinite","eq","a","console","error","alignSelf","WithdrawModal","valNumber","useUnstakeFarms","pid","masterChefContract","useMasterchef","onUnstake","unstakeFarm","useStakeFarms","onStake","stakeFarm","txHash","info","IconButtonWrapper","StakeAction","tokenBalance","location","useLocation","useAppDispatch","useWeb3React","useLpTokenPrice","handleStake","fetchFarmUserDataAsync","pids","handleUnstake","stakedBalanceBigNumber","getBalanceAmount","lt","ROUND_DOWN","useModal","onPresentDeposit","onPresentWithdraw","Balance","prefix","some","item","pathname","includes","useHarvestFarm","farmPid","onReward","harvestFarm","HarvestAction","earnings","usePriceCakeBusd","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","useApproveFarm","lpContract","callWithGasPrice","useCallWithGasPrice","onApprove","ethers","constants","MaxUint256","tx","wait","receipt","status","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","lpAddress","getAddress","isApproved","isGreaterThan","useERC20","handleApprove","pr","lpSymbol","ConnectWalletButton","ApyLabelContainer","ApyButton","useFarmUser","onPresentApyModal","stopPropagation","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","cardBorder","FarmCard","showExpandableSection","setShowExpandableSection","liquidity","undefined","toUpperCase","earnLabel","dual","liquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","isPromotedFarm","isActive","isCommunity","CardActionsContainer","getBscScanLink","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Container","AprWrapper","Apr","originalValue","hideButton","TokenWrapper","Farm","label","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isDesktop","useMatchBreakpoints","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","Staked","marginBottom","marginTop","expandAnimation","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isMobile","isSmallerScreen","tableSchema","columnNames","column","Object","keys","columnIndex","indexOf","createElement","colSpan","card","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","ToggleView","viewMode","onToggle","handleToggle","ViewMode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Image","getDisplayApr","cakeRewardsApr","lpRewardsApr","Farms","path","useFarms","farmsLP","userDataLoaded","query","setQuery","useUserFarmsViewMode","setViewMode","sortOption","setSortOption","useIntersectionObserver","observerRef","isIntersecting","chosenFarmsLength","isArchived","isInactive","usePollFarmsWithUserData","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceBusd","totalLiquidity","getFarmApr","poolWeight","ChainId","MAINNET","lowercaseQuery","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenFarmsMemoized","chosenFarms","farms","orderBy","slice","sortFarms","farmsCurrentlyVisible","rowData","PageHeader","exact","activeClassName","Page","Select","options","onOptionChange","option","marginLeft","sort","b","renderContent","Loading","src","alt","Outer","Inner","CoreTag","outline","startIcon","CommunityTag","DualTag","VoteNowTag","SoonTag","ClosedTag","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","boxShadow","DropDownList","ListItem","li","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","handleClickOutside","document","addEventListener","removeEventListener","selectedIndex","getImageUrlFromToken","TokenPairImage","primarySrc","secondarySrc","TokenImage"],"mappings":"gSAeeA,EAbIC,IAAOC,IAAV,4N,sECFHC,EAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,EAAW,SAACC,GACvB,OAAOA,EAAMC,QAAQ,qBAAqB,SAACC,GAAD,OAAOP,EAASC,UAAUM,IAAMA,M,kDCFtEC,EAAcV,YAAOW,KAAPX,CAAH,0EAKXY,EAAeZ,IAAOC,IAAV,sFAEd,qBAAGY,MAAkBC,aAAaC,MAgCvBC,EAtBsB,SAAC,GAA4D,IAAhDC,EAA+C,EAAzDC,SAAyD,IAA7BC,mBAA6B,MAAf,SAAe,EAC/F,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEQC,EAAMC,cAAND,EAEFE,EAAoBC,mBACxB,kBAAMC,KAAS,SAACC,GAAD,OAA4CX,EAAiBW,KAAI,OAChF,CAACX,IAQH,OACE,cAACL,EAAD,UACE,cAACF,EAAD,CAAamB,MAAOR,EAAYH,SAPnB,SAACU,GAChBN,EAAcM,EAAEE,OAAOD,OACvBJ,EAAkBG,IAKoCT,YAAaI,EAAEJ,Q,0BC9BnEY,EAAU/B,IAAOC,IAAV,sJAOD,qBAAGY,MAAkBmB,OAAOC,WAIlCC,EAAkE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1Eb,EAAMC,cAAND,EAER,OACE,eAACQ,EAAD,CAAS,aAAYR,EAAE,mCAAoCc,KAAK,SAASF,QAAS,kBAAMA,KAAxF,UACE,cAAC,KAAD,CAAMG,MAAM,UAAUC,MAAI,EAA1B,SACchB,EAAXa,EAAa,OAAY,aAE3BA,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtCF,EAAwBM,aAAe,CACrCJ,UAAU,GAGGF,I,2BChBHO,GAMAC,GDUGR,K,2BErBAS,GAbkB,SAAC,GAMnB,IALbC,EAKY,EALZA,kBACAC,EAIY,EAJZA,aAKMC,EAAcC,KAAOC,KAAKC,QAE1BC,EAAcL,GAAgBA,IAAiBC,EAAsBD,EAAR,MACnE,MAAM,GAAN,OAFmBD,GAAqBA,IAAsBE,EAAsBF,EAAR,MAE5E,YAAuBM,ICAnBnB,GAAU/B,IAAOC,IAAV,iDAIPkD,GAAqBnD,YAAOoD,KAAPpD,CAAH,iDA6BTqD,GAzB0C,SAAC,GAOnD,IANLC,EAMI,EANJA,eACAC,EAKI,EALJA,YACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEQpC,EAAMC,cAAND,EAER,OACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMqC,eAAe,gBAArB,UACE,eAAC,KAAD,WAAOrC,EAAE,mBAAT,OACCkC,EAAsB,cAAC,KAAD,UAAOA,IAA8B,cAAC,KAAD,CAAUI,MAAO,GAAIC,OAAQ,SAEzFN,GACA,cAACL,GAAD,CAAoBY,KAAMJ,EAA1B,SAA4CpC,EAAE,eAAgB,CAAEyC,OAAQN,MAE1E,cAACP,GAAD,CAAoBY,KAAMT,EAA1B,SAA2C/B,EAAE,mBAC7C,cAAC4B,GAAD,CAAoBY,KAAMR,EAA1B,SAAwChC,EAAE,uB,oBC3B1CQ,GAAU/B,YAAOiE,IAAPjE,CAAH,kEAMPkE,GAAgBlE,YAAOmE,KAAPnE,CAAH,iDAuBJoE,GAnBuC,SAAC,GAAiE,IAA/DV,EAA8D,EAA9DA,QAASW,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACpG,OACE,eAAC,GAAD,CAASZ,eAAe,gBAAgBa,WAAW,SAASC,GAAG,OAA/D,UACE,cAAC,KAAD,CAAgBC,QAAQ,WAAWC,aAAcL,EAAOM,eAAgBL,EAAYX,MAAO,GAAIC,OAAQ,KACvG,eAAC,IAAD,CAAMgB,cAAc,SAASL,WAAW,WAAxC,UACE,cAAC,KAAD,CAASC,GAAG,MAAZ,SAAmBhB,EAAQqB,MAAM,KAAK,KACtC,eAAC,IAAD,CAAMnB,eAAe,SAArB,UACGU,EAAkB,cAAC,KAAD,IAAmB,cAAC,KAAD,IACrCD,EACC,cAACH,GAAD,CAAeS,QAAQ,YAAvB,SAAoCN,IAEpC,cAAC,KAAD,CAAUW,GAAG,MAAMnB,MAAO,GAAIC,OAAQ,e,4ECN5CmB,GAAejF,IAAOC,IAAV,+DACN,SAACiF,GAAD,OAAWA,EAAMC,QAClB,SAACD,GAAD,OAAWA,EAAMC,QAGbC,GA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MACF,IAAK,KACL,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACL,GAAD,CAAcE,KAAME,KCLvBI,GAAqBzF,IAAOC,IAAV,qIAEF,SAACiF,GAAD,OAAWA,EAAMrE,MAAMmB,OAAO0D,eAGvC,SAACR,GAAD,OAAWA,EAAMrE,MAAMyE,QAAQ,MAGtCK,GAAoB3F,IAAOC,IAAV,wCAIR2F,GA1BgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1BC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUK,OAC3C,OACE,cAACT,GAAD,UACGM,IAAMC,SAASG,IAAIN,GAAU,SAACO,EAAOC,GAAR,OAC5B,qCACE,cAACV,GAAD,UAAoBS,IACnBC,EAAIP,EAAI,GAAK,cAAC,GAAD,a,SCgBlBQ,GAAmBtG,IAAOC,IAAV,0MAGA,qBAAGY,MAAkBmB,OAAOzB,SAX7B,SAAC,GAAkC,IAAD,IAA/BgG,iBAA+B,SAAZ1F,EAAY,EAAZA,MACzC,OAAI0F,EACK1F,EAAM2F,QAAQC,QAGhB5F,EAAM2F,QAAQE,SASZ,qBAAG7F,MAAkBmB,OAAO2E,QAKjCjG,GAAcV,YAAOW,KAAPX,CAAH,2LAOb,qBAAGa,MAAkBC,aAAa8F,MAIlC,qBAAG/F,MAAkBC,aAAaC,MAKhC8F,GAAqB7G,YAAO8G,KAAP9G,CAAH,yGAiET+G,GAzD+B,SAAC,GASxC,IARLC,EAQI,EARJA,IACAhD,EAOI,EAPJA,OACA9C,EAMI,EANJA,SACA+F,EAKI,EALJA,YACApF,EAII,EAJJA,MACA8B,EAGI,EAHJA,gBACAuD,EAEI,EAFJA,WAEI,IADJC,gBACI,MADO,GACP,EACI5F,EAAMC,cAAND,EACF6F,EAAwB,MAARJ,IAAgBA,EAWtC,OACE,sBAAKK,MAAO,CAAEC,SAAU,YAAxB,UACE,eAAChB,GAAD,CAAkBC,UAAWa,EAA7B,UACE,eAAC,IAAD,CAAMxD,eAAe,gBAAgB2D,GAAG,OAAxC,UACE,cAAC,KAAD,CAAMC,SAAS,OAAf,SAAuBN,IACvB,cAAC,KAAD,CAAMM,SAAS,OAAf,SAAuBjG,EAAE,qBAAsB,CAAEkG,QAdlC,SAACA,GACtB,GAAIL,EACF,MAAO,IAGT,IAAMM,EAAeC,sBAAWF,EAASN,GACzC,OAAOS,YAAgBF,EAAcP,EAAUA,GAQiBU,CAAeb,UAE3E,eAAC,IAAD,CAAMvC,WAAW,WAAWb,eAAe,eAA3C,UACE,cAAC,GAAD,CACEkE,QAAO,8BAAyBX,EAAzB,MACPY,UAAU,UACVC,KAAK,MACLC,IAAI,IACJ/G,SAAUA,EACVC,YAAY,IACZU,MAAOA,IAET,cAAC,IAAD,CAAQqG,MAAM,KAAK/F,QAAS8E,EAAakB,GAAG,MAA5C,SACG5G,EAAE,SAEL,cAAC,KAAD,CAAMiG,SAAS,OAAf,SAAuBxD,UAG1BoD,GACC,eAACP,GAAD,CAAoBW,SAAS,OAAOlF,MAAM,UAA1C,UACGf,EAAE,sBADL,IAC6B,IAC3B,cAAC,KAAD,CAAMiG,SAAS,OAAOjF,MAAM,EAAOwB,KAAMJ,EAAiByE,UAAQ,EAAC9F,MAAM,UAAzE,SACGf,EAAE,eAAgB,CAAEyC,oB,mBCzG3BqE,GAASrI,YAAOiE,IAAPjE,CAAH,kEAEI,qBAAGa,MAAkBmB,OAAOsG,YAGtCC,GAAavI,IAAOwI,GAAV,2QAWH,qBAAG3H,MAAkBmB,OAAOyG,cA4I1BC,GA1HiD,SAAC,GAS1D,IARLC,EAQI,EARJA,OACAC,EAOI,EAPJA,IACAC,EAMI,EANJA,WACAC,EAKI,EALJA,sBACAzE,EAII,EAJJA,WACA0E,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACAC,EACI,EADJA,eAEA,EAAoC7H,oBAAS,GAA7C,mBAAO8H,EAAP,KAAmBC,EAAnB,KACQ5H,EAAMC,cAAND,EACR,EAII6H,aACF,qCACE,cAAC,KAAD,UACG7H,EACC,mIAGJ,cAAC,KAAD,CAAM8H,GAAG,OAAT,SACG9H,EAAE,sGAEL,cAAC,KAAD,UAAOA,EAAE,8EAEX,CAAE+H,UAAW,UAAWC,cAAe,CAAC,GAAI,MAfjCC,EADb,EACEC,UACSC,EAFX,EAEEC,QACgBC,EAHlB,EAGEC,eAgBIC,EAAenB,EAAS,EAAI,EAC5BoB,GAAiG,IAA1FC,aAAOpB,EAAKE,EAAwB,EAAIA,EAAwB,EAAG,IAAKG,IAAuBgB,QAAQ,GAEpH,OACE,eAAC5B,GAAD,CAAQ6B,EAAE,OAAOpF,cAAc,SAA/B,UACE,cAAC,IAAD,CAAiB1C,SAAU8G,EAAY/G,QAAS,kBAAMgH,GAAc,SAACgB,GAAD,OAAWA,MAA/E,SACgB5I,EAAb2H,EAAe,OAAY,aAE7BA,GACC,eAAC,IAAD,CAAKkB,GAAG,MAAR,UACE,eAAC,KAAD,CAAMC,oBAAoB,YAAYC,WAAW,MAAMC,iBAAgB,iBAAYT,EAAZ,WAAvE,UACGnB,GACC,qCACE,cAAC,KAAD,CAAMrG,MAAM,aAAakI,OAAK,EAA9B,SACGjJ,EAAE,4BAEL,eAAC,KAAD,CAAMiJ,OAAK,EAACC,UAAU,QAAtB,UACG5B,EADH,UAKJ,cAAC,KAAD,CAAMvG,MAAM,aAAakI,OAAK,EAA9B,SACYjJ,EAAToH,EAAW,6BAAkC,SAEhD,eAAC,KAAD,CAAM6B,OAAK,EAACC,UAAU,QAAtB,UACG7B,EAAIqB,QAAQ,GADf,OAGA,cAAC,KAAD,CAAM3H,MAAM,aAAakI,OAAK,EAA9B,SACGjJ,EAAE,wCAAyC,CAC1CmJ,cAAe5B,EAAwB,EAAIA,EAAwB,MAGvE,eAAC,KAAD,CAAM0B,OAAK,EAACC,UAAU,QAAtB,UACGV,EADH,OAGCpB,GACC,qCACE,cAAC,KAAD,CAAMrG,MAAM,aAAakI,OAAK,EAA9B,SACGjJ,EAAE,qBAEL,eAAC,IAAD,CAAMqC,eAAe,WAAWa,WAAW,WAA3C,UACE,cAAC,KAAD,CAAM+F,OAAK,EAACC,UAAU,QAAQtC,GAAG,MAAjC,SACG9D,IAEH,sBAAMsG,IAAKnB,EAAX,SACE,cAAC,KAAD,CAAUlH,MAAM,aAAauB,MAAM,OAAOC,OAAO,WAElD8F,GAA4BF,WAKrC,eAACnB,GAAD,WACE,6BACE,cAAC,KAAD,CAAMf,SAAS,OAAOiD,UAAU,SAASnI,MAAM,aAAasI,QAAQ,SAApE,SACGrJ,EAAE,0CAGNoH,GACC,6BACE,cAAC,KAAD,CAAMnB,SAAS,OAAOiD,UAAU,SAASnI,MAAM,aAAasI,QAAQ,SAApE,SACGrJ,EAAE,0FAIT,6BACE,cAAC,KAAD,CAAMiG,SAAS,OAAOiD,UAAU,SAASnI,MAAM,aAAasI,QAAQ,SAApE,SACGrJ,EACC,mHAIL0H,EAAiB,GAChB,6BACE,cAAC,KAAD,CAAM4B,GAAG,OAAOrD,SAAS,OAAOiD,UAAU,SAASnI,MAAM,aAAasI,QAAQ,SAA9E,SACGrJ,EAAE,gFAA4E,CAC7EuJ,IAAK7B,WAMf,cAAC,IAAD,CAAMrF,eAAe,SAASiH,GAAG,OAAjC,SACE,cAAC,KAAD,CAAc9G,KAAMiF,EAApB,SAA+BD,aP/IrCgC,GAA8B,CAClC,EAAG,EACH,EAAG,WACH,EAAG,WACH,EAAG,a,SAOOtI,O,iBAAAA,I,cAAAA,Q,cAMAC,O,mDAAAA,I,oDAAAA,Q,KAuBZ,I,4MAAMsI,GAA0C,CAC9CC,SAAU,CACRC,aAAa,EACbC,qBAAsB,EACtBC,uBAAwB,EACxBC,gBAAiB,EACjBC,KAAM5I,GAAe6I,uBACrBC,gBAAiB/I,GAAgBgJ,KAEnCC,KAAM,CACJC,iBAAkB,OAClBC,eAAgB,GAChBC,OAAQ,EACRC,UAAW,EACXC,cAAe,IAIbC,GAAuB,SAC3BC,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,IAAMlB,EAAQ,2BAAQgB,EAAMhB,UAAd,IAAwBI,gBAAiBa,EAAOE,UAC9D,OAAO,2BACFH,GADL,IAEEhB,aAGJ,IAAK,oBACH,IAAMoB,GAAsBJ,EAAMhB,SAASC,YACrCD,EAAQ,2BAAQgB,EAAMhB,UAAd,IAAwBC,YAAamB,IACnD,OAAO,2BACFJ,GADL,IAEEhB,aAGJ,IAAK,0BACH,MAAyCiB,EAAOE,QAAxCE,EAAR,EAAQA,MAAOxD,EAAf,EAAeA,sBACf,GAAIA,EACF,OAAO,2BACFmD,GADL,IAEEhB,SAAS,2BACJgB,EAAMhB,UADH,IAENE,qBAAsBrC,MAI5B,IAAMqC,EAAuBJ,GAA4BuB,GACnDrB,EAAQ,2BAAQgB,EAAMhB,UAAd,IAAwBE,uBAAsBC,uBAAwBkB,IACpF,OAAO,2BACFL,GADL,IAEEhB,aAGJ,IAAK,eACH,MAA6CiB,EAAOE,QAA5CR,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,iBAClBD,EAAI,2BAAQO,EAAMP,MAAd,IAAoBE,iBAAgBD,qBAE9C,MAAO,CACLV,SAFY,2BAAQgB,EAAMhB,UAAd,IAAwBK,KAAM5I,GAAe6I,yBAGzDG,QAGJ,IAAK,2BACH,MAA4DQ,EAAOE,QAA3DR,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,iBAAkBI,EAA1C,EAA0CA,cACpCL,EAAI,2BAAQO,EAAMP,MAAd,IAAoBE,iBAAgBD,mBAAkBI,kBAChE,OAAO,2BACFE,GADL,IAEEP,SAGJ,IAAK,oBACH,IAAMJ,EAAOY,EAAOE,QACdnB,EAAQ,2BAAQgB,EAAMhB,UAAd,IAAwBK,SACtC,GAAIA,IAAS5I,GAAe6J,uBAAwB,CAClD,IAAMV,EAASW,WAAWP,EAAMP,KAAKG,OAAO5B,QA7G9B,IA+Gd,MAAO,CAAEgB,WAAUS,KADT,2BAAQO,EAAMP,MAAd,IAAoBG,YAGhC,OAAO,2BAAKI,GAAZ,IAAmBhB,aAErB,IAAK,SACH,IAAMS,EAAI,2BAAQO,EAAMP,MAASQ,EAAOE,SACxC,OAAO,2BAAKH,GAAZ,IAAmBP,SAErB,IAAK,eACH,MAA8BQ,EAAOE,QAA7BP,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACVJ,EAAI,2BAAQO,EAAMP,MAAd,IAAoBG,SAAQC,cAEtC,MAAO,CAAEb,SADK,2BAAQgB,EAAMhB,UAAd,IAAwBK,KAAM5I,GAAe6J,yBACxCb,QAErB,IAAK,wBACH,IAAMe,EACJR,EAAMhB,SAASO,kBAAoB/I,GAAgBgJ,IAAMhJ,GAAgBiK,MAAQjK,GAAgBgJ,IAC7FR,EAAQ,2BAAQgB,EAAMhB,UAAd,IAAwBO,gBAAiBiB,IACvD,OAAO,2BAAKR,GAAZ,IAAmBhB,aAErB,QACE,OAAOgB,IA6IEU,GAzIiB,SAC9BC,EACAC,EACAjE,EACAE,EACAG,GAEA,MAA0B6D,qBAAWd,GAAsBhB,IAA3D,mBAAOiB,EAAP,KAAcc,EAAd,KACA,EAAmCd,EAAMP,KAAjCE,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,OACxB,EAAqEI,EAAMhB,SAAnEC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,qBAAsBE,EAA3C,EAA2CA,gBAAiBC,EAA5D,EAA4DA,KAG5D0B,qBAAU,WACJlE,EAAwB,GAC1BiE,EAAS,CAAEZ,KAAM,0BAA2BC,QAAS,CAAEtD,6BAExD,CAACA,IAGJkE,qBAAU,WACR,GAAI1B,IAAS5I,GAAe6I,uBAAwB,CAClD,IAAM0B,EAAyBT,WAAWZ,GACpCsB,EAAoBhC,EAAcC,EAAuB,EACzDgC,EAAoBC,aAAqB,CAC7CC,eAAgBJ,EAChBrE,MACAiE,oBACAK,oBACAjE,mBAEIqE,GAAeC,OAAOC,MAAML,EAAkB9B,IAC9CS,EAAYwB,EAAcH,EAAkB9B,GAAmB,EAC/DoC,EAAWH,EAAcxB,EAAYe,EAAoB,EACzDd,EAAgBuB,EAClBI,aAAO,CACLC,aAAcF,EACdG,eAAgBX,IAElB,EACJF,EAAS,CAAEZ,KAAM,SAAUC,QAAS,CAAEP,OAAQ4B,EAAU3B,YAAWC,sBAEpE,CAACH,EAAgBhD,EAAKyC,EAAiBwB,EAAmB5D,EAAgBiC,EAAaC,EAAsBG,IAGhH0B,qBAAU,WACR,GAAI1B,IAAS5I,GAAe6J,uBAAwB,CAClD,IAAMsB,EAA0BC,aAC9BjC,EACAjD,EACAsC,EAAcC,EAAuB,EACrClC,GAEI8E,EAAgBR,OAAOC,MAAMK,EAAwBxC,IAEvD,EADAwC,EAAwBxC,GAEtB2C,EAAiB,IAAIC,IAAUF,GAAc9N,IAAI2M,GACjDb,EAAgB2B,aAAO,CAC3BC,aAAc9B,EACd+B,eAAgBG,IAElBhB,EAAS,CACPZ,KAAM,2BACNC,QAAS,CACPR,eAAgBmC,EAAa9D,QAvMjB,GAwMZ0B,iBAAkBqC,EAAe/D,QAzMnB,IA0Md8B,sBAIL,CAACV,EAAiBzC,EAAKsC,EAAaC,EAAsBG,EAAMO,EAAQe,EAAmB3D,IAuD9F,MAAO,CACLgD,QACAiC,yBAjD+B,SAACC,GAChC,IAAMC,EAAqB,IAAIH,IAAUE,GAAQlO,IAAI2M,GAC/CjB,EAAmByC,EAAmBC,GAAG,GAAKD,EAAmBnE,QAxNnD,IAwN8E,OAClG8C,EAAS,CAAEZ,KAAM,eAAgBC,QAAS,CAAER,eAAgBuC,EAAQxC,uBA+CpE2C,2BA3CiCC,uBACjC,SAACJ,GACC,IAAMK,EAAmB,IAAIP,IAAUE,GAAQM,MAAM7B,GAC/C8B,EAAuBF,EAAiBH,GAAG,GAAKG,EAAiBvE,QA/NvD,GA+NgF,OAChG8C,EAAS,CACPZ,KAAM,eACNC,QAAS,CAAER,eAAgB8C,EAAsB/C,iBAAkBwC,OAGvE,CAACvB,IAmCD+B,mBA/ByB,SAACC,GAC1B7B,EAAS,CAAEZ,KAAM,qBAAsBC,QAASwC,KA+BhDC,kBA3BwB,WACxB9B,EAAS,CAAEZ,KAAM,uBA2BjB2C,sBAvB4B,WAC5B/B,EAAS,CAAEZ,KAAM,2BAuBjB4C,wBA3D8B,SAACzC,GAC/BS,EAAS,CAAEZ,KAAM,0BAA2BC,QAAS,CAAEE,YA2DvD0C,kBArBwB,SAACC,GACzBlC,EAAS,CAAEZ,KAAM,oBAAqBC,QAAS6C,KAqB/CC,aAjBmB,SAACf,GACpB,IAAMgB,EAAoB,IAAIlB,IAAUE,GAAQlO,IAAI4M,GACpDE,EAAS,CACPZ,KAAM,eACNC,QAAS,CAAEP,OAAQsC,EAAQrC,UAAWqD,EAAkB3B,QAAU,EAAI2B,EAAkBC,iBQ7QxFC,GAAU,IAGVC,GAAiBtP,YAAOuP,IAAPvP,CAAH,gJAID,qBAAGa,MAAkB2O,MAAMC,WAGxCC,GAAe1P,YAAOuP,IAAPvP,CAAH,6GAGC,qBAAGa,MAAkB2O,MAAMC,WAC9B,qBAAG5O,MAAkBmB,OAAO2N,UAAUC,aAGhDC,GAAoB7P,YAAOuP,IAAPvP,CAAH,uOASV,qBAAGa,MAAkBmB,OAAOyG,cAMnCqH,GAAsB9P,YAAOiE,IAAPjE,CAAH,uEAKnB+P,GAAkB/P,YAAO8G,KAAP9G,CAAH,oIAOjB,gBAAGgQ,EAAH,EAAGA,QAASnP,EAAZ,EAAYA,MAAZ,OACAmP,GAAO,kGAKCnP,EAAMmB,OAAOiO,WALd,0BAMCpP,EAAMmB,OAAOiO,WANd,qMAwGIC,GA9EyB,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,mBAAoBC,EAAuD,EAAvDA,gBAAiBlB,EAAsC,EAAtCA,aAAcF,EAAwB,EAAxBA,kBACtFqB,EAAWC,iBAAgC,MACjD,EAA6CF,EAAgB1E,KAArDG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,cACnBT,EAAS8E,EAAgBnF,SAAzBK,KAEA/J,EAAMC,cAAND,EAERyL,qBAAU,WACJ1B,IAAS5I,GAAe6J,wBAA0B8D,EAASE,SAC7DF,EAASE,QAAQC,UAElB,CAAClF,IAEJ,IAAMmF,EAAiB,WACrBzB,EAAkBtM,GAAe6J,yBASnC,OACE,cAAC+C,GAAD,UACE,eAACI,GAAD,WACE,cAAC,KAAD,CAAMlI,SAAS,OAAOlF,MAAM,YAAYC,MAAI,EAACmO,cAAc,YAA3D,SACGnP,EAAE,0BAEL,cAAC,IAAD,CAAMqC,eAAe,gBAAgBiH,GAAG,MAAM/G,OAAO,OAArD,SACGwH,IAAS5I,GAAe6J,uBACvB,qCACE,cAACsD,GAAD,UACE,cAAC,KAAD,CACElF,IAAK0F,EACLlE,KAAK,SACLpE,UAAU,UACVD,QAAQ,OACRI,MAAM,KACNrG,MAAOgK,EACP1K,YAAY,MACZD,SArBgB,SAACyP,GAC/BzB,EAAayB,EAAMC,cAAc/O,YAuBvB,cAAC,KAAD,CAAYqG,MAAM,KAAKvD,QAAQ,OAAOxC,QA3BzB,WACvB6M,EAAkBtM,GAAe6I,yBA0BvB,SACE,cAAC,IAAD,CAAejJ,MAAM,iBAIzB,qCACE,eAACwN,GAAD,CAAqB3N,QAASsO,EAA9B,UAEE,cAAC,KAAD,CAAMjJ,SAAS,OAAOjF,MAAI,EAA1B,eAGA,cAACwN,GAAD,CAAiBvI,SAAS,OAAOjF,MAAI,EAACyN,QAASnE,EA7H9C,KA6HD,SACGA,EAAOgF,eAAe,KAAM,CAC3BC,sBAAuBjF,EAASwD,GAAU,EAAI,EAC9C0B,sBAAuBlF,EAASwD,GAAU,EAAI,SAIpD,cAAC,KAAD,CAAYnH,MAAM,KAAKvD,QAAQ,OAAOxC,QAASsO,EAA/C,SACE,cAAC,KAAD,CAAYnO,MAAM,mBAK1B,eAAC,KAAD,CAAMkF,SAAS,OAAOlF,MAAM,aAA5B,eACKwJ,EADL,IACiBqE,EADjB,KAEGpE,EAAc8E,eAAe,KAAM,CAAEC,sBAAuB,EAAGC,sBAAuB,IAFzF,cC5IFC,GAASC,YAAH,0NAeNC,GAAiBlR,YAAOiE,IAAPjE,CAAH,wHAEEgR,IACR,gBAAGnQ,EAAH,EAAGA,MAAH,gBAAkBA,EAAMmB,OAAOC,QAA/B,SAgCCkP,GAvBqC,SAAC,GAAyB,IAAvBf,EAAsB,EAAtBA,gBACrD,EAAsBhP,mBAAS,cAA/B,mBAAOgQ,EAAP,KAAYC,EAAZ,KACQ/F,EAAS8E,EAAgBnF,SAAzBK,KAUR,OAPA0B,qBAAU,WACRqE,GAAO,SAACC,GACN,IAAMC,EAASC,SAASF,EAAQvM,MAAM,KAAK,GAAI,IAC/C,MAAM,YAAN,OAAmBwM,EAAS,QAE7B,CAACnB,IAGF,cAACc,GAAD,CAAgBtN,eAAe,SAASyF,GAAG,OAA3C,SACGiC,IAAS5I,GAAe6I,uBACvB,cAAC,IAAD,CAAe1H,MAAM,OAAOC,OAAO,OAAOxB,MAAM,eAEhD,cAAC,IAAD,CAAauB,MAAM,OAAOC,OAAO,OAAOxB,MAAM,gBAJK8O,ICHrDK,GAAczR,YAAO0R,KAAP1R,CAAH,4FAOX2R,GAAsB3R,IAAOC,IAAV,gIAIrB,qBAAGY,MAAkBC,aAAaC,MAKhC6Q,GAAsB5R,YAAO6R,IAAP7R,CAAH,0GAOZ,qBAAG8R,SAA2B,GAAM,KAgMlCC,GA7L+C,SAAC,GAiBxD,IAhBLC,EAgBI,EAhBJA,UACAC,EAeI,EAfJA,OACApF,EAcI,EAdJA,kBACAjE,EAaI,EAbJA,IACAC,EAYI,EAZJA,WACAE,EAWI,EAXJA,UACAC,EAUI,EAVJA,SACAkJ,EASI,EATJA,oBACAC,EAQI,EARJA,mBACAvF,EAOI,EAPJA,kBACAvI,EAMI,EANJA,WACA+N,EAKI,EALJA,aAKI,IAJJjC,0BAII,MAJiB,OAIjB,MAHJrH,6BAGI,MAHoB,EAGpB,MAFJG,sBAEI,MAFa,EAEb,MADJN,cACI,SACIpH,EAAMC,cAAND,EACA8Q,EAAYC,eAAZD,QACFE,EAAkBjC,iBAAgC,MAExD,EAUI3D,GAAwBC,EAAmBC,EAAmBjE,EAAKE,EAAuBG,GAT5FgD,EADF,EACEA,MACAiC,EAFF,EAEEA,yBACAI,EAHF,EAGEA,2BACAK,EAJF,EAIEA,mBACAE,EALF,EAKEA,kBACAC,EANF,EAMEA,sBACAC,EAPF,EAOEA,wBACAC,EARF,EAQEA,kBACAE,EATF,EASEA,aAGF,EAAkFjD,EAAMhB,SAAhFC,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,uBAAwBC,EAA7C,EAA6CA,gBAAiBG,EAA9D,EAA8DA,gBAC9D,EAA6CS,EAAMP,KAA3CE,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,iBAGxBqB,qBAAU,WACJuF,EAAgBhC,SAClBgC,EAAgBhC,QAAQC,UAEzB,IAGHxD,qBAAU,WACJoF,GACF9D,EAA2B8D,KAE5B,CAACA,EAAc9D,IAElB,MAA+ClF,aAC7CT,EACIpH,EAAE,kHACFA,EACE,yHACA,CAAEiR,YAAaL,IAErB,CAAE7I,UAAW,UAAWC,cAAe,CAAC,GAAI,MAPtCE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,QAASE,EAA5B,EAA4BA,eActB4I,EAAcjH,IAAoB/I,GAAgBiK,MAAQyF,EAAqB,MAC/EO,EAAelH,IAAoB/I,GAAgBiK,MAAQf,EAAmBC,EAC9E+G,EAAiBnH,IAAoB/I,GAAgBiK,MAAQ,MAAQyF,EACrES,GAAkBpH,IAAoB/I,GAAgBiK,MAAQd,EAAiBD,EAC/EkH,GAAcrH,IAAoB/I,GAAgBiK,MAAQ4B,EAA6BJ,EAE7F,OACE,eAACuD,GAAD,CACEqB,MAAOvR,EAAE,kBACTyQ,UAAWC,GAAUD,EACrBC,OAAM,OAAEA,QAAF,IAAEA,IAAU,KAClBc,iBAAiB,uBAJnB,UAME,eAACpB,GAAD,WACE,eAAC,IAAD,CAAM7M,cAAc,SAASJ,GAAG,MAAhC,UACE,cAAC,KAAD,CAAMpC,MAAM,YAAYC,MAAI,EAACiF,SAAS,OAAOkJ,cAAc,YAA3D,SACGnP,EAAE,iBAAkB,CAAEyR,MAAOb,MAEhC,cAAC,IAAD,CACEc,cAAa,UAAKL,GAAL,YAAwBD,GACrCO,SAAUX,EACVpR,YAAY,OACZU,MAAO6Q,EACPS,KAAMV,EACNI,YAAaA,GACbO,mBAAoBtE,EACpBuE,QA9Ba,WACrBrE,EAAkBtM,GAAe6I,2BA+B3B,eAAC,IAAD,CAAM3H,eAAe,gBAAgBiH,GAAG,MAAxC,UACE,cAAC,IAAD,CACE3C,MAAM,KACNgC,EAAE,WACFrG,MAAM,OACNc,QAAQ,WACRxC,QAAS,kBAAM+L,EAAyB,QAL1C,kBASA,cAAC,IAAD,CACEhG,MAAM,KACNgC,EAAE,WACFrG,MAAM,OACNc,QAAQ,WACRxC,QAAS,kBAAM+L,EAAyB,SAL1C,mBASA,cAAC,IAAD,CACE4D,SAAUI,EAAoBoB,IAAI,KAAOjB,EACzCnK,MAAM,KACNgC,EAAE,WACFrG,MAAM,QACNc,QAAQ,WACRxC,QAAS,kBACP+L,EAAyBqF,YAAiBrB,EAAoBzD,MAAM7B,IAAoB4G,aAP5F,SAUGjS,EAAE,cAAckS,sBAEnB,sBAAM9I,IAAKlB,EAAX,SACE,cAAC,KAAD,CAAU5F,MAAM,OAAOC,OAAO,OAAOxB,MAAM,iBAE5CuH,GAAkBF,KAErB,cAAC,KAAD,CAAMkB,GAAG,OAAOvI,MAAM,YAAYC,MAAI,EAACiF,SAAS,OAAOkJ,cAAc,YAArE,SACGnP,EAAE,gBAEL,eAACqQ,GAAD,CAAqB8B,YAAarI,EAAiBsI,YAAahF,EAAoBzG,MAAM,KAA1F,UACE,cAAC,IAAD,CAAgBvD,QAAQ,WAAxB,SAAoCpD,EAAE,QACtC,cAAC,IAAD,CAAgBoD,QAAQ,WAAxB,SAAoCpD,EAAE,QACtC,cAAC,IAAD,CAAgBoD,QAAQ,WAAxB,SAAoCpD,EAAE,SACtC,cAAC,IAAD,CAAgBoD,QAAQ,WAAxB,SAAoCpD,EAAE,QACtC,cAAC,IAAD,CAAgBoD,QAAQ,WAAxB,SAAoCpD,EAAE,WAEb,IAA1BuH,GACC,qCACE,cAAC,KAAD,CAAM+B,GAAG,OAAOvI,MAAM,YAAYC,MAAI,EAACiF,SAAS,OAAOkJ,cAAc,YAArE,SACGnP,EAAE,uBAEL,eAAC,IAAD,CAAMkD,WAAW,SAAjB,UACE,cAAC,IAAD,CAAMmP,KAAK,IAAX,SACE,cAAC,IAAD,CAAU1L,MAAM,KAAK2L,QAAS3I,EAAahK,SAAU2N,MAEvD,cAAC,IAAD,CAAM+E,KAAK,IAAX,SACE,eAAChC,GAAD,CACEE,UAAW5G,EACXwI,YAAatI,EACbuI,YAAa5E,EACb7G,MAAM,KAJR,UAME,cAAC,IAAD,UAAiB3G,EAAE,QACnB,cAAC,IAAD,UAAiBA,EAAE,QACnB,cAAC,IAAD,UAAiBA,EAAE,SACnB,cAAC,IAAD,UAAiBA,EAAE,uBAO/B,cAAC,GAAD,CAAe6O,gBAAiBnE,IAChC,cAAC,IAAD,UACE,cAAC,GAAD,CACEkE,mBAAoBA,EACpBC,gBAAiBnE,EACjBiD,aAAcA,EACdF,kBAAmBA,SAIzB,cAAC,GAAD,CACErG,OAAQA,EACRC,IAAKA,EACLC,WAAYA,EACZC,sBAAuBA,EACvBzE,WAAYA,EACZ0E,UAAWA,EACXC,SAAUA,EACVC,eAAgBA,Q,UChPlB6K,GAAqB9T,YAAOiE,IAAPjE,CAAH,kDAIlB+T,GAAmB/T,YAAO8G,KAAP9G,CAAH,yIA0JPgU,GAnImC,SAAC,GAa5C,IAZLhN,EAYI,EAZJA,IACAiN,EAWI,EAXJA,cACAC,EAUI,EAVJA,UACAlC,EASI,EATJA,UASI,IARJmC,iBAQI,MARQ,GAQR,EAPJ9P,EAOI,EAPJA,WACAwE,EAMI,EANJA,WACAuL,EAKI,EALJA,QACA1Q,EAII,EAJJA,QACAkF,EAGI,EAHJA,IACAjF,EAEI,EAFJA,gBACA0Q,EACI,EADJA,UAEA,EAAsBjT,mBAAS,IAA/B,mBAAOkT,EAAP,KAAYC,EAAZ,KACA,EAAqCC,eAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACtB,EAAkCtT,oBAAS,GAA3C,mBAAOuT,EAAP,KAAkBC,EAAlB,KACA,EAAkDxT,oBAAS,GAA3D,mBAAOyT,EAAP,KAA0BC,EAA1B,KACQvT,EAAMC,cAAND,EACFwT,EAAcrT,mBAAQ,WAC1B,OAAOsT,YAAsBhO,KAC5B,CAACA,IAEEiO,EAAkB,IAAIhH,IAAUqG,GAChCY,EAAoB,IAAIjH,IAAU8G,GAElCI,EAAaF,EAAgBxG,MAAM2F,GAEnCjH,EAAoBC,aAAqB,CAC7CC,eAAiB4H,EAAgBzH,QAAkC,EAAxB2H,EAAW/F,WACtDxG,MACAiE,kBAAmBwH,EAAUjF,aAGzBgG,EAAYf,EAAU5F,MAAMtB,EAAkB,IAC9CkI,EAAqBC,YACzBF,EAAUhG,WACVgG,EAAU/G,GAAG,KAAS,EAAI,EAC1B+G,EAAU/G,GAAG,KAAS,EAAI,GAGtBkH,EAAehH,uBACnB,SAAC3M,GACKA,EAAEgP,cAAc4E,SAASC,OAC3BlB,EAAO3S,EAAEgP,cAAc/O,MAAMrB,QAAQ,KAAM,QAG/C,CAAC+T,IAGGmB,EAAkBnH,uBAAY,WAClCgG,EAAOQ,KACN,CAACA,EAAaR,IAEjB,OAAIM,EAEA,cAAC,GAAD,CACE9L,UAAWxH,EAAE,eAAgB,CAAEyC,OAAQN,IACvCwO,oBAAqB+B,EAAc0B,KAAK3O,GACxCmL,mBAAoBgC,EACpBvH,kBAAmBwH,EAAQhF,WAC3BvC,kBAAmBwH,EAAUjF,WAC7BxG,IAAKA,EACLvE,WAAYA,EACZwE,WAAYA,EACZG,SAAUrF,EACVgF,QAAM,EACNyJ,aAAckC,EACdrC,OAAQ,kBAAM6C,GAAqB,MAMvC,eAAC,KAAD,CAAOhC,MAAOvR,EAAE,mBAAoByQ,UAAWA,EAA/C,UACE,cAAC,GAAD,CACEnQ,MAAOyS,EACPrN,YAAayO,EACbxU,SAAUqU,EACVvO,IAAK+N,EACL/Q,OAAQmQ,EACRxQ,gBAAiBA,EACjBuD,WAAY3F,EAAE,WAEhB,eAAC,IAAD,CAAMsJ,GAAG,OAAOpG,WAAW,SAASb,eAAe,gBAAnD,UACE,eAAC,KAAD,CAAMuE,GAAG,MAAM7F,MAAM,aAArB,UACGf,EAAE,+BADL,OAGA,eAACuS,GAAD,CAAoBrP,WAAW,SAAStC,QAAS,kBAAM2S,GAAqB,IAA5E,UACE,eAACf,GAAD,eAAoBsB,KACpB,cAAC,KAAD,CAAY1Q,QAAQ,OAAOuD,MAAM,KAAjC,SACE,cAAC,IAAD,CAAe5F,MAAM,aAAauB,MAAM,iBAI9C,eAAC,GAAD,WACE,cAAC,IAAD,CAAQc,QAAQ,YAAYxC,QAAS6P,EAAWnO,MAAM,OAAOiO,SAAU6C,EAAvE,SACGpT,EAAE,YAEL,cAAC,IAAD,CACEsC,MAAM,OACNiO,SACE6C,IAAcM,EAAgBW,YAAcX,EAAgBY,GAAG,IAAMZ,EAAgB5G,GAAG6G,GAE1F/S,QAAO,wBAAE,uBAAA2T,EAAA,6DACPlB,GAAa,GADN,kBAGCV,EAAUI,GAHX,OAILG,EAAalT,EAAE,WAAYA,EAAE,4CAC7ByQ,IALK,gDAOL0C,EACEnT,EAAE,SACFA,EAAE,uFAEJwU,QAAQC,MAAR,MAXK,yBAaLpB,GAAa,GAbR,4EALX,SAsBerT,EAAZoT,EAAc,aAAkB,gBAGrC,cAAC,KAAD,CAAc5Q,KAAMJ,EAAiB0D,MAAO,CAAE4O,UAAW,UAAzD,SACG1U,EAAE,eAAgB,CAAEyC,OAAQmQ,UClFtB+B,GAlEqC,SAAC,GAAmD,IAAjDhC,EAAgD,EAAhDA,UAAWlC,EAAqC,EAArCA,UAAWhL,EAA0B,EAA1BA,IAA0B,IAArBmN,iBAAqB,MAAT,GAAS,EACrG,EAAsB/S,mBAAS,IAA/B,mBAAOkT,EAAP,KAAYC,EAAZ,KACA,EAAqCC,eAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACtB,EAAkCtT,oBAAS,GAA3C,mBAAOuT,EAAP,KAAkBC,EAAlB,KACQrT,EAAMC,cAAND,EACFwT,EAAcrT,mBAAQ,WAC1B,OAAOsT,YAAsBhO,KAC5B,CAACA,IAEEmP,EAAY,IAAIlI,IAAUqG,GAC1BY,EAAoB,IAAIjH,IAAU8G,GAElCQ,EAAehH,uBACnB,SAAC3M,GACKA,EAAEgP,cAAc4E,SAASC,OAC3BlB,EAAO3S,EAAEgP,cAAc/O,MAAMrB,QAAQ,KAAM,QAG/C,CAAC+T,IAGGmB,EAAkBnH,uBAAY,WAClCgG,EAAOQ,KACN,CAACA,EAAaR,IAEjB,OACE,eAAC,KAAD,CAAOzB,MAAOvR,EAAE,qBAAsByQ,UAAWA,EAAjD,UACE,cAAC,GAAD,CACE/K,YAAayO,EACbxU,SAAUqU,EACV1T,MAAOyS,EACPtN,IAAK+N,EACL/Q,OAAQmQ,EACRjN,WAAY3F,EAAE,aAEhB,eAAC,GAAD,WACE,cAAC,IAAD,CAAQoD,QAAQ,YAAYxC,QAAS6P,EAAWnO,MAAM,OAAOiO,SAAU6C,EAAvE,SACGpT,EAAE,YAEL,cAAC,IAAD,CACEuQ,SAAU6C,IAAcwB,EAAUP,YAAcO,EAAUN,GAAG,IAAMM,EAAU9H,GAAG6G,GAChF/S,QAAO,wBAAE,uBAAA2T,EAAA,6DACPlB,GAAa,GADN,kBAGCV,EAAUI,GAHX,OAILG,EAAalT,EAAE,aAAcA,EAAE,0DAC/ByQ,IALK,gDAOL0C,EACEnT,EAAE,SACFA,EAAE,uFAEJwU,QAAQC,MAAR,MAXK,yBAaLpB,GAAa,GAbR,4EAgBT/Q,MAAM,OAlBR,SAoBetC,EAAZoT,EAAc,aAAkB,oB,UCzD5ByB,GAbS,SAACC,GACvB,IAAMC,EAAqBC,eAS3B,MAAO,CAAEC,UAPajI,sBAAW,yCAC/B,WAAOJ,GAAP,UAAA2H,EAAA,sEACQW,aAAYH,EAAoBD,EAAKlI,GAD7C,2CAD+B,sDAI/B,CAACmI,EAAoBD,MCOVK,GAdO,SAACL,GACrB,IAAMC,EAAqBC,eAU3B,MAAO,CAAEI,QARWpI,sBAAW,yCAC7B,WAAOJ,GAAP,gBAAA2H,EAAA,sEACuBc,aAAUN,EAAoBD,EAAKlI,GAD1D,OACQ0I,EADR,OAEEd,QAAQe,KAAKD,GAFf,2CAD6B,sDAK7B,CAACP,EAAoBD,MCkBnBU,GAAoB/W,IAAOC,IAAV,gFA+GR+W,GAxGqC,SAAC,GAW9C,IAVL/C,EAUI,EAVJA,cACAgD,EASI,EATJA,aACA9C,EAQI,EARJA,UACAkC,EAOI,EAPJA,IACAhS,EAMI,EANJA,WACAuE,EAKI,EALJA,IACAC,EAII,EAJJA,WACAlF,EAGI,EAHJA,gBACA0Q,EAEI,EAFJA,UACA3Q,EACI,EADJA,QAEQnC,EAAMC,cAAND,EACAoV,EAAYD,GAAcL,GAA1BM,QACAH,EAAcJ,GAAgBC,GAA9BG,UACFU,EAAWC,cACXpK,EAAWqK,eACT/E,EAAYgF,cAAZhF,QACF+B,EAAUkD,YAAgBnD,GAE1BoD,EAAW,yCAAG,WAAOpJ,GAAP,UAAA2H,EAAA,sEACZa,EAAQxI,GADI,OAElBpB,EAASyK,aAAuB,CAAEnF,UAASoF,KAAM,CAACpB,MAFhC,2CAAH,sDAKXqB,EAAa,yCAAG,WAAOvJ,GAAP,UAAA2H,EAAA,sEACdU,EAAUrI,GADI,OAEpBpB,EAASyK,aAAuB,CAAEnF,UAASoF,KAAM,CAACpB,MAF9B,2CAAH,sDAKbxO,EAAiB0G,uBAAY,WACjC,IAAMoJ,EAAyBC,YAAiB3D,GAChD,OAAI0D,EAAuBtJ,GAAG,IAAMsJ,EAAuBE,GAAG,MACrD,aAELF,EAAuBtJ,GAAG,GACrBsJ,EAAuB1N,QAAQ,EAAGgE,IAAU6J,YAE9CH,EAAuB1N,QAAQ,EAAGgE,IAAU6J,cAClD,CAAC7D,IAEJ,EAA2B8D,aACzB,cAAC,GAAD,CACE/Q,IAAKiQ,EACLhD,cAAeA,EACfC,UAAWqD,EACXpD,UAAWA,EACX9P,WAAYA,EACZ+P,QAASA,EACT1Q,QAASA,EACTkF,IAAKA,EACLC,WAAYA,EACZlF,gBAAiBA,EACjB0Q,UAAWA,KAZR2D,EAAP,oBAeA,EAA4BD,aAC1B,cAAC,GAAD,CAAe/Q,IAAKiN,EAAeC,UAAWwD,EAAevD,UAAWA,KADnE8D,EAAP,oBA4BA,OACE,eAAC,IAAD,CAAMrU,eAAe,gBAAgBa,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMK,cAAc,SAASL,WAAW,aAAxC,UACE,cAAC,KAAD,CAASnC,MAAO2R,EAAc4B,GAAG,GAAK,eAAiB,OAAvD,SAAgEhO,MAC/DoM,EAAc5F,GAAG,IAAM+F,EAAQ/F,GAAG,IACjC,cAAC6J,GAAA,EAAD,CACE1Q,SAAS,OACTlF,MAAM,aACN6E,SAAU,EACVtF,MAAO0R,YAAiBa,EAAQ3F,MAAMwF,IACtCd,KAAK,OACLgF,OAAO,SAlCRlE,EAAc4B,GAAG,GACtB,cAAC,IAAD,CACE1T,QAAS6V,EACTlG,SAAU,CAAC,UAAW,YAAYsG,MAAK,SAACC,GAAD,OAAUnB,EAASoB,SAASC,SAASF,MAF9E,SAIG9W,EAAE,cAGL,eAACwV,GAAD,WACE,cAAC,KAAD,CAAYpS,QAAQ,WAAWxC,QAAS8V,EAAmB9P,GAAG,MAA9D,SACE,cAAC,KAAD,CAAW7F,MAAM,UAAUuB,MAAM,WAEnC,cAAC,KAAD,CACEc,QAAQ,WACRxC,QAAS6V,EACTlG,SAAU,CAAC,UAAW,YAAYsG,MAAK,SAACC,GAAD,OAAUnB,EAASoB,SAASC,SAASF,MAH9E,SAKE,cAAC,IAAD,CAAS/V,MAAM,UAAUuB,MAAM,kB,SCrG1B2U,GAVQ,SAACC,GACtB,IAAMnC,EAAqBC,eAM3B,MAAO,CAAEmC,SAJanK,sBAAW,wBAAC,uBAAAuH,EAAA,sEAC1B6C,aAAYrC,EAAoBmC,GADN,2CAE/B,CAACA,EAASnC,MC0DAsC,GAhDuC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUxC,EAAU,EAAVA,IACzDhE,EAAYgF,cAAZhF,QACR,EAAqCmC,eAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACdnT,EAAMC,cAAND,EACR,EAAkCH,oBAAS,GAA3C,mBAAOuT,EAAP,KAAkBC,EAAlB,KACQ8D,EAAaF,GAAenC,GAA5BqC,SACFrE,EAAYyE,cACZ/L,EAAWqK,eACX2B,EAAqB1G,EAAUuF,YAAiBiB,GAAYG,KAC5DnR,EAAiBkR,EAAmB9O,QAAQ,EAAGgE,IAAU6J,YACzDmB,EAAeF,EAAqBA,EAAmBG,aAAa7E,GAAWjF,WAAa,EAElG,OACE,eAAC,IAAD,CAAM1K,GAAG,MAAMd,eAAe,gBAAgBa,WAAW,SAAzD,UACE,eAAC,IAAD,CAAMK,cAAc,SAASL,WAAW,aAAxC,UACE,cAAC,KAAD,CAASnC,MAAOyW,EAAmBlD,GAAG,GAAK,eAAiB,OAA5D,SAAqEhO,IACpEoR,EAAe,GACd,cAACf,GAAA,EAAD,CAAS1Q,SAAS,OAAOlF,MAAM,aAAa6E,SAAU,EAAGtF,MAAOoX,EAAc9F,KAAK,OAAOgF,OAAO,SAGrG,cAAC,IAAD,CACErG,SAAUiH,EAAmBlD,GAAG,IAAMlB,EACtCxS,QAAO,wBAAE,uBAAA2T,EAAA,6DACPlB,GAAa,GADN,kBAGC8D,IAHD,OAILjE,EAAa,GAAD,OACPlT,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAEyC,OAAQ,UANlE,gDASL0Q,EACEnT,EAAE,SACFA,EAAE,uFAEJwU,QAAQC,MAAR,MAbK,yBAeLpB,GAAa,GAfR,qBAiBP7H,EAASyK,aAAuB,CAAEnF,UAASoF,KAAM,CAACpB,MAjB3C,+DAFX,SAsBG9U,EAAE,iB,mBCrCI4X,GAnBQ,SAACC,GACtB,IAAM9C,EAAqBC,eACnB8C,EAAqBC,eAArBD,iBAcR,MAAO,CAAEE,UAbahL,sBAAW,wBAAC,+BAAAuH,EAAA,+EAEbuD,EAAiBD,EAAY,UAAW,CACvD9C,EAAmBrT,QACnBuW,KAAOC,UAAUC,aAJW,cAExBC,EAFwB,gBAMRA,EAAGC,OANK,cAMxBC,EANwB,yBAOvBA,EAAQC,QAPe,4DASvB,GATuB,0DAW/B,CAACV,EAAY9C,EAAoB+C,MCJhCU,GAAS/Z,IAAOC,IAAV,oDAkFG+Z,GAnEqC,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAM5H,EAAmD,EAAnDA,QAAS1O,EAA0C,EAA1CA,gBAAiB0Q,EAAyB,EAAzBA,UAAW3Q,EAAc,EAAdA,QACxFnC,EAAMC,cAAND,EACR,EAAkDH,oBAAS,GAA3D,mBAAO8Y,EAAP,KAA0BC,EAA1B,KACQ9D,EAAqB4D,EAArB5D,IAAK+D,EAAgBH,EAAhBG,YACb,EAA6DH,EAAKI,UAAY,GAAtEC,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,aAAchD,EAAjC,EAAiCA,cAAe4E,EAAhD,EAAgDA,SAC1C0B,EAAYC,aAAWJ,GACvBK,EAAapI,GAAWiI,GAAaA,EAAUI,cAAc,GAC7D3N,EAAWqK,eAEXgC,EAAauB,aAASJ,GAEpBhB,EAAcJ,GAAeC,GAA7BG,UAEFqB,EAAgBrM,sBAAW,wBAAC,uBAAAuH,EAAA,sEAE9BqE,GAAqB,GAFS,SAGxBZ,IAHwB,OAI9BxM,EAASyK,aAAuB,CAAEnF,UAASoF,KAAM,CAACpB,MAClD8D,GAAqB,GALS,gDAO9BpE,QAAQC,MAAR,MAP8B,yDAS/B,CAACuD,EAAWxM,EAAUsF,EAASgE,IAqBlC,OACE,eAAC0D,GAAD,WACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMxX,MAAI,EAACmO,cAAc,YAAYpO,MAAM,YAAYkF,SAAS,OAAOqT,GAAG,MAA1E,kBAGA,cAAC,KAAD,CAAMtY,MAAI,EAACmO,cAAc,YAAYpO,MAAM,aAAakF,SAAS,OAAjE,SACGjG,EAAE,eAGP,cAAC,GAAD,CAAesX,SAAUA,EAAUxC,IAAKA,IACxC,eAAC,IAAD,WACE,cAAC,KAAD,CAAM9T,MAAI,EAACmO,cAAc,YAAYpO,MAAM,YAAYkF,SAAS,OAAOqT,GAAG,MAA1E,SACGZ,EAAKa,WAER,cAAC,KAAD,CAAMvY,MAAI,EAACmO,cAAc,YAAYpO,MAAM,aAAakF,SAAS,OAAjE,SACGjG,EAAE,eAGL8Q,EArCGoI,EACL,cAAC,GAAD,CACExG,cAAeA,EACfgD,aAAcA,EACd9C,UAAW8F,EAAKa,SAChBzE,IAAKA,EACLzN,IAAKqR,EAAKrR,IACVlF,QAASA,EACT2Q,UAAWA,EACX1Q,gBAAiBA,IAGnB,cAAC,IAAD,CAAQkH,GAAG,MAAMhH,MAAM,OAAOiO,SAAUoI,EAAmB/X,QAASyY,EAApE,SACGrZ,EAAE,qBAwBO,cAACwZ,GAAA,EAAD,CAAqBlQ,GAAG,MAAMhH,MAAM,aCpFhDmX,GAAoBhb,YAAOiE,IAAPjE,CAAH,yFAkERib,GA9C6B,SAAC,GAUtC,IATLtW,EASI,EATJA,QACA0R,EAQI,EARJA,IACA3S,EAOI,EAPJA,QACAoX,EAMI,EANJA,SACAzG,EAKI,EALJA,UACAzL,EAII,EAJJA,IACAvE,EAGI,EAHJA,WACAwE,EAEI,EAFJA,WACAlF,EACI,EADJA,gBAEQpC,EAAMC,cAAND,EACF6S,EAAUkD,YAAgBwD,GAChC,EAAwCI,YAAY7E,GAA5CY,EAAR,EAAQA,aAAchD,EAAtB,EAAsBA,cACtB,EAA4B8D,aAC1B,cAAC,GAAD,CACEhP,UAAWxH,EAAE,eAAgB,CAAEyC,OAAQN,IACvCwO,oBAAqB+B,EAAc0B,KAAKsB,GACxC9E,mBAAoB2I,EACpBlO,kBAAmBwH,EAAQhF,WAC3BvC,kBAAmBwH,EAAUjF,WAC7BxG,IAAKA,EACLvE,WAAYA,EACZwE,WAAYA,EACZG,SAAUrF,EACVgF,QAAM,KAXHwS,EAAP,oBAoBA,OACE,eAACH,GAAD,CAAmBvW,WAAW,SAAStC,QANf,SAACwO,GACzBA,EAAMyK,kBACND,KAIA,UACGtS,EADH,IAEe,oBAAZlE,GACC,cAAC,KAAD,CAAYA,QAAQ,OAAOuD,MAAM,KAAKlD,GAAG,MAAzC,SACE,cAAC,IAAD,CAAenB,MAAM,eC7CzBwX,GAAarb,YAAOsb,IAAPtb,CAAH,uDAIVub,GAAyBvb,YAAOiE,IAAPjE,CAAH,6GAMtBwb,GAAmBxb,IAAOC,IAAV,mGAEI,qBAAGY,MAAkBmB,OAAOyZ,cAkGvCC,GAtF2B,SAAC,GAAuD,IAArDzB,EAAoD,EAApDA,KAAMpR,EAA8C,EAA9CA,WAAYrF,EAAkC,EAAlCA,QAAS6Q,EAAyB,EAAzBA,UAAWhC,EAAc,EAAdA,QACzE9Q,EAAMC,cAAND,EAER,EAA0DH,oBAAS,GAAnE,mBAAOua,EAAP,KAA8BC,EAA9B,KAEMnY,EACJwW,EAAK4B,WAAa5B,EAAK4B,UAAUxN,GAAG,GAApC,WACQ4L,EAAK4B,UAAUzM,WAAWyB,oBAAeiL,EAAW,CAAE/K,sBAAuB,KACjF,GAEArN,EAAUuW,EAAKa,UAAYb,EAAKa,SAASiB,cAAcvb,QAAQ,UAAW,IAC1Ewb,EAAY/B,EAAKgC,KAAOhC,EAAKgC,KAAKD,UAAYza,EAAE,eAEhD2a,EAAwBvZ,GAAyB,CACrDC,kBAAmBqX,EAAKzV,WAAWvB,QACnCJ,aAAcoX,EAAK1V,MAAMtB,UAErBU,EAAe,UAAMwY,KAAN,YAAgCD,GAC/C3B,EAAYC,aAAWP,EAAKG,aAC5BgC,EAAuC,SAAtBnC,EAAK1V,MAAMP,OAElC,OACE,eAACqX,GAAD,CAAYgB,SAAUD,EAAtB,UACE,eAACb,GAAD,WACE,cAAC,GAAD,CACE7X,QAASA,EACTW,WAAY4V,EAAK5V,WACjBC,gBAAiB2V,EAAKqC,YACtB/X,MAAO0V,EAAK1V,MACZC,WAAYyV,EAAKzV,cAEjBhB,GACA,eAAC,IAAD,CAAMI,eAAe,gBAAgBa,WAAW,SAAhD,UACE,eAAC,KAAD,WAAOlD,EAAE,OAAT,OACA,cAAC,KAAD,CAAMgB,MAAI,EAAC8E,MAAO,CAAEuD,QAAS,OAAQnG,WAAY,UAAjD,SACGwV,EAAKrR,IACJ,cAAC,GAAD,CACEjE,QAAQ,kBACR0R,IAAK4D,EAAK5D,IACVyE,SAAUb,EAAKa,SACfzW,WAAY4V,EAAK5V,WACjBX,QAASA,EACTC,gBAAiBA,EACjB0Q,UAAWA,EACXzL,IAAKqR,EAAKrR,IACVC,WAAYA,IAGd,cAAC,KAAD,CAAU/E,OAAQ,GAAID,MAAO,UAKrC,eAAC,IAAD,CAAMD,eAAe,gBAArB,UACE,eAAC,KAAD,WAAOrC,EAAE,QAAT,OACA,cAAC,KAAD,CAAMgB,MAAI,EAAV,SAAYyZ,OAEd,cAACO,GAAD,CACEtC,KAAMA,EACNvW,QAASA,EACT2O,QAASA,EACTgC,UAAWA,EACX1Q,gBAAiBA,OAIrB,eAAC6X,GAAD,WACE,cAAC,GAAD,CACErZ,QAAS,kBAAMyZ,GAA0BD,IACzCvZ,SAAUuZ,IAEXA,GACC,cAAC,GAAD,CACEnY,QAASA,EACTF,eAAgBkZ,YAAejC,EAAW,WAC1ChX,YAAW,qBAAgBgX,GAC3B9W,oBAAqBA,EACrBC,QAASA,EACTC,gBAAiBA,WCjGd8Y,GAfW,SAACC,EAAoBC,GAC7C,MAAwCvb,oBAAS,GAAjD,mBAAOwb,EAAP,KAAqBC,EAArB,KAWA,OATA7P,qBAAU,WACR,IAAI8P,EAMJ,OALIJ,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBE,EAAYC,YAAW,kBAAMF,GAAgB,KAAQF,IAEhD,kBAAMK,aAAaF,MACzB,CAACJ,EAAWC,EAAWC,IACnBA,GCHHK,GAAYjd,IAAOC,IAAV,8MAGJ,qBAAGY,MAAkBmB,OAAO2E,QAQvB,qBAAG9F,MAAkBmB,OAAOyG,cAMtCyU,GAAald,IAAOC,IAAV,uEA+CDkd,GA1CiB,SAAC,GAW1B,IAVLtb,EAUI,EAVJA,MACAwU,EASI,EATJA,IACA3S,EAQI,EARJA,QACAoX,EAOI,EAPJA,SACAzW,EAMI,EANJA,WACAxB,EAKI,EALJA,aACAD,EAII,EAJJA,kBACAyR,EAGI,EAHJA,UACA+I,EAEI,EAFJA,cAEI,IADJC,kBACI,SACEnB,EAAwBvZ,GAAyB,CAAEC,oBAAmBC,iBACtEc,EAAe,UAAMwY,KAAN,YAAgCD,GAErD,OAAyB,IAAlBkB,EACL,cAACH,GAAD,UACGG,EACC,cAAC,GAAD,CACEzY,QAAS0Y,EAAa,OAAS,kBAC/BhH,IAAKA,EACLyE,SAAUA,EACVpX,QAASA,EACTW,WAAYA,EACZgQ,UAAWA,EACXzL,IAAKwU,EACLvU,WAAYhH,EACZ8B,gBAAiBA,IAGnB,cAACuZ,GAAD,UACE,cAAC,KAAD,CAAUrZ,MAAO,SAKvB,cAACoZ,GAAD,UACE,eAACC,GAAD,WAAaE,EAAb,UChEAH,GAAYjd,IAAOC,IAAV,wIAKX,qBAAGY,MAAkBC,aAAaC,MAKhCuc,GAAetd,IAAOC,IAAV,uGAId,qBAAGY,MAAkBC,aAAaC,MAmCvBwc,GA9BkC,SAAC,GAAuC,IAArChZ,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAAYgZ,EAAiB,EAAjBA,MAAOnH,EAAU,EAAVA,IACpEpC,EAAkBiH,YAAY7E,GAA9BpC,cACA1S,EAAMC,cAAND,EACFkc,EAAmBlK,YAAiBU,GAc1C,OACE,eAAC,GAAD,WACE,cAACqJ,GAAD,UACE,cAAC,KAAD,CAAgB3Y,QAAQ,WAAWC,aAAcL,EAAOM,eAAgBL,EAAYX,MAAO,GAAIC,OAAQ,OAEzG,gCAhBE2Z,EAEA,cAAC,KAAD,CAAMnb,MAAM,YAAYkF,SAAS,OAAOjF,MAAI,EAACmO,cAAc,YAA3D,SACGnP,EAAE,aAKF,KAUH,cAAC,KAAD,CAAMgB,MAAI,EAAV,SAAYib,WC9CdE,GAAS1d,IAAO2d,KAAV,uFACD,gBAAGC,EAAH,EAAGA,OAAQ/c,EAAX,EAAWA,MAAX,OAAwB+c,EAAS/c,EAAMmB,OAAO2E,KAAO9F,EAAMmB,OAAO6b,gBAgB9DC,GAXiD,SAAC,GAAiC,IAA/BjF,EAA8B,EAA9BA,SACjE,OAD+F,EAApBkF,cAElE,cAACL,GAAD,CAAQE,OAAQ/E,EAAhB,SAA2BA,EAAShI,mBAG3C,cAAC6M,GAAD,CAAQE,OAAQ,EAAhB,SACE,cAAC,KAAD,CAAU/Z,MAAO,QChBjBoZ,GAAYjd,IAAOC,IAAV,6KAKJ,qBAAGY,MAAkBmB,OAAOC,WAEnC,qBAAGpB,MAAkBC,aAAaC,MAKhCid,GAAYhe,YAAOie,IAAPje,CAAH,kEACA,qBAAGke,QAAyB,iBAAmB,eAgB/CC,GAZyB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACjC7c,EAAMC,cAAND,EACA8c,EAAcC,eAAdD,UAER,OACE,eAAC,GAAD,YACIA,GAAa9c,EAAE,WACjB,cAACyc,GAAD,CAAW1b,MAAM,UAAU4b,QAASE,QC5BpCG,GAAmBve,IAAOC,IAAV,wDAQhBue,GAAoBxe,IAAOC,IAAV,uKACZ,qBAAGY,MAAkBmB,OAAO2E,QAKnC,qBAAG9F,MAAkBC,aAAa2d,MAMhCxB,GAAYjd,IAAOC,IAAV,wEAqCAye,GAhC8C,SAAC,GAAoB,IAAlBra,EAAiB,EAAjBA,WACxDsa,EAAoBta,EAAaA,EAAWua,cAAgB,cAAC,KAAD,CAAU/a,MAAO,KAC3EtC,EAAMC,cAAND,EACFsd,EACJ,qCACE,cAAC,KAAD,UACGtd,EACC,mIAGJ,cAAC,KAAD,CAAM8H,GAAG,OAAT,SACG9H,EAAE,sGAEL,cAAC,KAAD,UAAOA,EAAE,8EAGb,EAA+C6H,aAAWyV,EAAgB,CACxEvV,UAAW,UACXC,cAAe,CAAC,GAAI,MAFdE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,QAASE,EAA5B,EAA4BA,eAK5B,OACE,eAAC,GAAD,WACE,cAAC2U,GAAD,UAAoBG,IACpB,cAACJ,GAAD,CAAkB5T,IAAKlB,EAAvB,SACE,cAAC,KAAD,CAAUnH,MAAM,iBAEjBuH,GAAkBF,MCnDnB4U,GAAmBve,IAAOC,IAAV,wDAQhB6e,GAAmB9e,IAAOC,IAAV,kLAMlB,qBAAGY,MAAkBC,aAAa2d,MAMhCxB,GAAYjd,IAAOC,IAAV,wEA+BA8e,GA1B4C,SAAC,GAAmB,IAAjBlD,EAAgB,EAAhBA,UACtDmD,EACJnD,GAAaA,EAAUxN,GAAG,GAA1B,WACMd,OAAOsO,GAAWhL,oBAAeiL,EAAW,CAAE/K,sBAAuB,KAEzE,cAAC,KAAD,CAAUlN,MAAO,KAEbtC,EAAMC,cAAND,EACR,EAA+C6H,aAC7C7H,EAAE,+DACF,CAAE+H,UAAW,UAAWC,cAAe,CAAC,GAAI,MAFtCE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,QAASE,EAA5B,EAA4BA,eAK5B,OACE,eAAC,GAAD,WACE,cAACiV,GAAD,UACE,cAAC,KAAD,UAAOE,MAET,cAAC,GAAD,CAAkBrU,IAAKlB,EAAvB,SACE,cAAC,KAAD,CAAUnH,MAAM,iBAEjBuH,GAAkBF,MClDZsV,GAAkBjf,IAAOC,IAAV,0XAEN,qBAAGY,MAAkBmB,OAAOzB,SAM9C,qBAAGM,MAAkBC,aAAaC,MAOlC,qBAAGF,MAAkBC,aAAaoe,MAQzBC,GAAenf,IAAOC,IAAV,gDAIZmf,GAAgBpf,IAAOC,IAAV,2GC4DX2Y,GApEoD,SAAC,GAAsC,IAApCvC,EAAmC,EAAnCA,IAAKgE,EAA8B,EAA9BA,SAAU0D,EAAoB,EAApBA,cACnF,EAAqCvJ,eAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAChB2K,EAAoB,IAAIpR,IAAUoM,EAASxB,UAC3CxE,EAAYyE,cACdD,EAAWG,KACXC,EAAe,EACfpR,EAAiBkW,EAAgBlF,EAAShI,iBAAmB,cAAC,KAAD,CAAUhN,MAAO,KAG7Ewb,EAAkBC,WAErBrG,GADAJ,EAAWjB,YAAiByH,IACJnG,aAAa7E,GAAWjF,WAChDvH,EAAiBgR,EAAS5O,QAAQ,EAAGgE,IAAU6J,aAGjD,MAAkC1W,oBAAS,GAA3C,mBAAOuT,EAAP,KAAkBC,EAAlB,KACQ8D,EAAaF,GAAenC,GAA5BqC,SACAnX,EAAMC,cAAND,EACFwL,EAAWqK,eACT/E,EAAYgF,cAAZhF,QAER,OACE,eAAC4M,GAAD,WACE,eAACE,GAAD,WACE,cAAC,KAAD,CAAM5c,MAAI,EAACmO,cAAc,YAAYpO,MAAM,YAAYkF,SAAS,OAAOqT,GAAG,MAA1E,kBAGA,cAAC,KAAD,CAAMtY,MAAI,EAACmO,cAAc,YAAYpO,MAAM,aAAakF,SAAS,OAAjE,SACGjG,EAAE,eAGP,eAAC6d,GAAD,WACE,gCACE,cAAC,KAAD,UAAUvX,IACToR,EAAe,GACd,cAACf,GAAA,EAAD,CAAS1Q,SAAS,OAAOlF,MAAM,aAAa6E,SAAU,EAAGtF,MAAOoX,EAAc9F,KAAK,OAAOgF,OAAO,SAGrG,cAAC,IAAD,CACErG,SAAU+G,EAAShD,GAAG,IAAMlB,IAAcoJ,EAC1C5b,QAAO,wBAAE,uBAAA2T,EAAA,6DACPlB,GAAa,GADN,kBAGC8D,IAHD,OAILjE,EAAa,GAAD,OACPlT,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAEyC,OAAQ,UANlE,gDASL0Q,EACEnT,EAAE,SACFA,EAAE,uFAEJwU,QAAQC,MAAR,MAbK,yBAeLpB,GAAa,GAfR,qBAiBP7H,EAASyK,aAAuB,CAAEnF,UAASoF,KAAM,CAACpB,MAjB3C,+DAmBTrR,GAAG,MArBL,SAuBGzD,EAAE,oBCzDPwV,GAAoB/W,IAAOC,IAAV,gDAiNRsf,GAvM6C,SAAC,GAWtD,IAVLlJ,EAUI,EAVJA,IACAzN,EASI,EATJA,IACAvE,EAQI,EARJA,WACAyW,EAOI,EAPJA,SACApX,EAMI,EANJA,QACA0W,EAKI,EALJA,YACA5V,EAII,EAJJA,WACAD,EAGI,EAHJA,MACAwZ,EAEI,EAFJA,cACAlV,EACI,EADJA,WAEQtH,EAAMC,cAAND,EACA8Q,EAAYgF,cAAZhF,QACR,EAAkDjR,oBAAS,GAA3D,mBAAO8Y,EAAP,KAA0BC,EAA1B,KACA,EAAmDe,YAAY7E,GAAvDiE,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,aAAchD,EAAjC,EAAiCA,cACzB0C,EAAYD,GAAcL,GAA1BM,QACAH,EAAcJ,GAAgBC,GAA9BG,UACFU,EAAWC,cACX/C,EAAUkD,YAAgBwD,GAC1BzG,EAAYyE,cAEZ2B,EAAapI,GAAWiI,GAAaA,EAAUI,cAAc,GAE7DH,EAAYC,aAAWJ,GACvB8B,EAAwBvZ,GAAyB,CACrDC,kBAAmB4B,EAAWvB,QAC9BJ,aAAc0B,EAAMtB,UAEhBU,EAAe,UAAMwY,KAAN,YAAgCD,GAE/C3E,EAAW,yCAAG,WAAOpJ,GAAP,UAAA2H,EAAA,sEACZa,EAAQxI,GADI,OAElBpB,EAASyK,aAAuB,CAAEnF,UAASoF,KAAM,CAACpB,MAFhC,2CAAH,sDAKXqB,EAAa,yCAAG,WAAOvJ,GAAP,UAAA2H,EAAA,sEACdU,EAAUrI,GADI,OAEpBpB,EAASyK,aAAuB,CAAEnF,UAASoF,KAAM,CAACpB,MAF9B,2CAAH,sDAKbxO,EAAiB0G,uBAAY,WACjC,IAAMoJ,EAAyBC,YAAiB3D,GAChD,OAAI0D,EAAuBtJ,GAAG,IAAMsJ,EAAuBE,GAAG,MACrDF,EAAuB1N,QAAQ,GAAIgE,YAAU6J,YAElDH,EAAuBtJ,GAAG,IAAMsJ,EAAuBE,GAAG,MACrD7C,YAAsBf,GAAepD,iBAEvC8G,EAAuB1N,QAAQ,EAAGgE,YAAU6J,cAClD,CAAC7D,IAEJ,EAA2B8D,aACzB,cAAC,GAAD,CACE/Q,IAAKiQ,EACL7C,QAASA,EACT1Q,QAASA,EACTkF,IAAKA,EACLC,WAAYA,EACZoL,cAAeA,EACfC,UAAWqD,EACXpD,UAAW2G,EACXzW,WAAYA,EACZV,gBAAiBA,EACjB0Q,UAAWA,KAZR2D,EAAP,oBAeA,EAA4BD,aAC1B,cAAC,GAAD,CAAe/Q,IAAKiN,EAAeC,UAAWwD,EAAevD,UAAW2G,KADnE7C,EAAP,oBAGMmB,EAAauB,aAASJ,GACtBxN,EAAWqK,eACTmC,EAAcJ,GAAeC,GAA7BG,UAEFqB,EAAgBrM,sBAAW,wBAAC,uBAAAuH,EAAA,sEAE9BqE,GAAqB,GAFS,SAGxBZ,IAHwB,OAI9BxM,EAASyK,aAAuB,CAAEnF,UAASoF,KAAM,CAACpB,MAElD8D,GAAqB,GANS,gDAQ9BpE,QAAQC,MAAR,MAR8B,yDAU/B,CAACuD,EAAWxM,EAAUsF,EAASgE,IAElC,OAAKhE,EAeDoI,EACExG,EAAc5F,GAAG,GAEjB,eAAC4Q,GAAD,WACE,eAACE,GAAD,WACE,cAAC,KAAD,CAAM5c,MAAI,EAACmO,cAAc,YAAYpO,MAAM,YAAYkF,SAAS,OAAOqT,GAAG,MAA1E,SACGC,IAEH,cAAC,KAAD,CAAMvY,MAAI,EAACmO,cAAc,YAAYpO,MAAM,aAAakF,SAAS,OAAjE,SACGjG,EAAE,eAGP,eAAC6d,GAAD,WACE,gCACE,cAAC,KAAD,UAAUvX,MACToM,EAAc5F,GAAG,IAAM+F,EAAQ/F,GAAG,IACjC,cAAC6J,GAAA,EAAD,CACE1Q,SAAS,OACTlF,MAAM,aACN6E,SAAU,EACVtF,MAAO0R,YAAiBa,EAAQ3F,MAAMwF,IACtCd,KAAK,OACLgF,OAAO,SAIb,eAAC,GAAD,WACE,cAAC,KAAD,CAAYxT,QAAQ,YAAYxC,QAAS8V,EAAmB9P,GAAG,MAA/D,SACE,cAAC,KAAD,CAAW7F,MAAM,UAAUuB,MAAM,WAEnC,cAAC,KAAD,CACEc,QAAQ,YACRxC,QAAS6V,EACTlG,SAAU,CAAC,UAAW,YAAYsG,MAAK,SAACC,GAAD,OAAUnB,EAASoB,SAASC,SAASF,MAH9E,SAKE,cAAC,IAAD,CAAS/V,MAAM,UAAUuB,MAAM,oBASzC,eAACob,GAAD,WACE,eAACE,GAAD,WACE,cAAC,KAAD,CAAM5c,MAAI,EAACmO,cAAc,YAAYpO,MAAM,aAAakF,SAAS,OAAOqT,GAAG,MAA3E,SACGtZ,EAAE,SAASwa,gBAEd,cAAC,KAAD,CAAMxZ,MAAI,EAACmO,cAAc,YAAYpO,MAAM,YAAYkF,SAAS,OAAhE,SACGsT,OAGL,cAACsE,GAAD,UACE,cAAC,IAAD,CACEvb,MAAM,OACN1B,QAAS6V,EACTrT,QAAQ,YACRmN,SAAU,CAAC,UAAW,YAAYsG,MAAK,SAACC,GAAD,OAAUnB,EAASoB,SAASC,SAASF,MAJ9E,SAMG9W,EAAE,mBAORwc,EAgBH,eAACkB,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM5c,MAAI,EAACmO,cAAc,YAAYpO,MAAM,aAAakF,SAAS,OAAjE,SACGjG,EAAE,mBAGP,cAAC6d,GAAD,UACE,cAAC,IAAD,CAAQvb,MAAM,OAAOiO,SAAUoI,EAAmB/X,QAASyY,EAAejW,QAAQ,YAAlF,SACGpD,EAAE,iBAtBP,eAAC0d,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM5c,MAAI,EAACmO,cAAc,YAAYpO,MAAM,aAAakF,SAAS,OAAjE,SACGjG,EAAE,qBAGP,cAAC6d,GAAD,UACE,cAAC,KAAD,CAAUvb,MAAO,IAAK2b,aAAc,GAAIC,UAAW,UAzFvD,eAACR,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM5c,MAAI,EAACmO,cAAc,YAAYpO,MAAM,aAAakF,SAAS,OAAjE,SACGjG,EAAE,qBAGP,cAAC6d,GAAD,UACE,cAACrE,GAAA,EAAD,CAAqBlX,MAAM,eCzG/B6b,GAAkBzO,YAAH,wGASf0O,GAAoB1O,YAAH,wGASjBgM,GAAYjd,IAAOC,IAAV,oPACA,qBAAGmC,SAEVwd,YADI,0EAEAF,IAEJE,YAJI,0EAKAD,OAGI,qBAAG9e,MAAkBmB,OAAOiO,cAMxC,qBAAGpP,MAAkBC,aAAa2d,MAMhCtb,GAAqBnD,YAAOoD,KAAPpD,CAAH,mDAIlB6f,GAAiB7f,IAAOC,IAAV,4KACT,qBAAGY,MAAkBmB,OAAO2E,QAKnC,qBAAG9F,MAAkBC,aAAaC,MAKhC+e,GAAgB9f,IAAOC,IAAV,oRAKf,qBAAGY,MAAkBC,aAAaC,MAgBhCke,GAAkBjf,IAAOC,IAAV,sLAIjB,qBAAGY,MAAkBC,aAAaC,MAQhCgf,GAAgB/f,IAAOC,IAAV,mDAIb+f,GAAiBhgB,IAAOC,IAAV,qFAGhB,qBAAGY,MAAkBC,aAAa2d,MAKhCwB,GAAejgB,IAAOC,IAAV,+HAoEHigB,GA7DgD,SAAC,GAOzD,IANLC,EAMI,EANJA,QACAvX,EAKI,EALJA,IACAvE,EAII,EAJJA,WACAwX,EAGI,EAHJA,UACAkC,EAEI,EAFJA,cACA3b,EACI,EADJA,SAEM6X,EAAOkG,EAEL5e,EAAMC,cAAND,EACF8a,EAA+B,OAApBpC,EAAK5V,WACdG,EAA4ByV,EAA5BzV,WAAYD,EAAgB0V,EAAhB1V,MAAO0X,EAAShC,EAATgC,KACrBvY,EAAUuW,EAAKa,UAAYb,EAAKa,SAASiB,cAAcvb,QAAQ,UAAW,IAC1E0b,EAAwBvZ,GAAyB,CACrDC,kBAAmB4B,EAAWvB,QAC9BJ,aAAc0B,EAAMtB,UAEhBsX,EAAYC,aAAWP,EAAKG,aAC5BgG,EAAM5D,YAAejC,EAAW,WAChCzD,EAAI,qBAAiByD,GAE3B,OACE,eAAC,GAAD,CAAWnY,SAAUA,EAArB,UACE,eAAC2d,GAAD,WACG1D,GACC,cAACwD,GAAD,UACE,cAAC,GAAD,CAAoB9b,KAAI,eAAUmY,GAAlC,SACG3a,EAAE,eAAgB,CAAEyC,OAAQN,QAInC,cAAC,GAAD,CAAoBK,KAAMqc,EAA1B,SAAgC7e,EAAE,mBAClC,cAAC,GAAD,CAAoBwC,KAAM+S,EAA1B,SAAiCvV,EAAE,mBACnC,eAACue,GAAD,WACG7F,EAAKqC,YAAc,cAAC,KAAD,IAAmB,cAAC,KAAD,IACtCL,EAAO,cAAC,KAAD,IAAc,WAG1B,eAAC+D,GAAD,WACE,eAACC,GAAD,WACE,cAAC,KAAD,UAAO1e,EAAE,SACT,cAAC,GAAD,eAASqH,OAEX,eAACqX,GAAD,WACE,cAAC,KAAD,UAAO1e,EAAE,gBACT,cAAC,GAAD,eAAgB8C,OAElB,eAAC4b,GAAD,WACE,cAAC,KAAD,UAAO1e,EAAE,eACT,cAAC,GAAD,eAAesa,UAGnB,eAAC,GAAD,WACE,cAAC,GAAD,2BAAmB5B,GAAnB,IAAyB8D,cAAeA,KACxC,cAACsC,GAAD,2BAAkBpG,GAAlB,IAAwB8D,cAAeA,EAAera,QAASA,EAASmF,WAAYD,EAAI/G,gBCxL1Fye,GAAQtgB,IAAOC,IAAV,sFAEA,qBAAGY,MAAkBmB,OAAOyG,cAIjC8X,GAAmBvgB,IAAOC,IAAV,6FAmBPugB,GAT+B,SAAC,GAA8B,IAAD,IAA3BhD,aAA2B,MAAnB,GAAmB,EAAf3X,EAAe,EAAfA,SAC3D,OACE,gCACG2X,GAAS,cAAC8C,GAAD,UAAQ9C,IAClB,cAAC+C,GAAD,UAAmB1a,QCMZ4a,GAAwC,CACnD,CACEC,GAAI,EACJC,KAAM,OACNC,UAAU,EACVpD,MAAO,IAET,CACEkD,GAAI,EACJC,KAAM,SACNC,UAAU,EACVpD,MAAO,UAET,CACEkD,GAAI,EACJC,KAAM,MACNC,UAAU,EACVpD,MAAO,OAET,CACEkD,GAAI,EACJC,KAAM,UACNC,UAAU,EACVpD,MAAO,KAIEqD,GAAyC,CACpD,CACEH,GAAI,EACJC,KAAM,OACNC,UAAU,EACVpD,MAAO,IAET,CACEkD,GAAI,EACJC,KAAM,SACNC,UAAU,EACVpD,MAAO,UAET,CACEkD,GAAI,EACJC,KAAM,MACNC,UAAU,EACVpD,MAAO,OAET,CACEkD,GAAI,EACJC,KAAM,YACNC,UAAU,EACVpD,MAAO,aAET,CACEkD,GAAI,EACJC,KAAM,aACNC,UAAU,EACVpD,MAAO,cAET,CACEkD,GAAI,EACJC,KAAM,UACNC,UAAU,EACVpD,MAAO,KC5DLsD,GAAQ,CACZlY,IAAKuU,GACLlD,KAAMsD,GACNK,OAAQE,GACRqC,QAAShC,GACT9Z,WAAYqa,GACZ7C,UAAWkD,IAGPgC,GAAY/gB,IAAOC,IAAV,+KAOX,qBAAGY,MAAkBC,aAAaoe,MAKhC8B,GAAWhhB,IAAOihB,GAAV,mFAEe,qBAAGpgB,MAAkBmB,OAAOyZ,cAGnDyF,GAAmBlhB,IAAOmhB,GAAV,4DAIhBC,GAAgBphB,IAAOmhB,GAAV,6EAKbE,GAAiBrhB,IAAOmhB,GAAV,oDAwHLG,GApH2C,SAACpc,GACzD,IAAQib,EAA2Bjb,EAA3Bib,QAASpC,EAAkB7Y,EAAlB6Y,cACXwD,IAAoBrG,YAAYiF,EAAQ9J,KAAKpC,cAAc7E,WACjE,EAAsDhO,mBAASmgB,GAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KACMC,EAAoBjF,GAAkB+E,EAAqB,KACzDjgB,EAAMC,cAAND,EAEFogB,EAAoB,WACxBF,GAAwBD,IAG1BxU,qBAAU,WACRyU,EAAuBF,KACtB,CAACA,IAEJ,MAAgCjD,eAAxBD,EAAR,EAAQA,UAAWuD,EAAnB,EAAmBA,SAEbC,GAAmBxD,EACnByD,EAAcD,EAAkBpB,GAAqBI,GACrDkB,EAAcD,EAAY3b,KAAI,SAAC6b,GAAD,OAAYA,EAAOrB,QAmFvD,OACE,qCAjFKiB,EA+CH,eAACZ,GAAD,CAAU7e,QAASwf,EAAnB,UACE,+BACE,6BACE,cAACN,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,eAAUnc,EAAM+U,aAItB,+BACE,cAACiH,GAAD,UACE,cAAC,GAAD,CAAY1D,MAAOjc,EAAE,UAArB,SACE,cAAC,GAAD,2BAAY2D,EAAM0Y,QAAlB,IAA0BG,cAAeA,SAG7C,cAACqD,GAAD,UACE,cAAC,GAAD,CAAY5D,MAAOjc,EAAE,OAArB,SACE,cAAC,GAAD,2BAAS2D,EAAM0D,KAAf,IAAoByU,YAAU,eAKtC,6BACE,cAAC0D,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAS3C,mBAAoBoD,aAtEnC,cAACR,GAAD,CAAU7e,QAASwf,EAAnB,SACGM,OAAOC,KAAKhd,GAAOiB,KAAI,SAACiL,GACvB,IAAM+Q,EAAcJ,EAAYK,QAAQhR,GACxC,IAAqB,IAAjB+Q,EACF,OAAO,KAGT,OAAQ/Q,GACN,IAAK,UACH,OACE,6BACE,cAAC2P,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAS3C,mBAAoBoD,SAH1BpQ,GAQb,IAAK,MACH,OACE,6BACE,cAAC2P,GAAD,UACE,cAAC,GAAD,CAAYvD,MAAOjc,EAAE,OAArB,SACE,cAAC,GAAD,2BAAS2D,EAAM0D,KAAf,IAAoByU,WAAYwE,UAH7BzQ,GAQb,QACE,OACE,6BACE,cAAC2P,GAAD,UACE,cAAC,GAAD,CAAYvD,MAAOjc,EAAEugB,EAAYK,GAAa3E,OAA9C,SACGzX,IAAMsc,cAAcvB,GAAM1P,GAA1B,2BAAqClM,EAAMkM,IAA3C,IAAiD2M,wBAH/C3M,SAmDpBsQ,GACC,6BACE,oBAAIY,QAAS,EAAb,SACE,cAAC,GAAD,2BAAiBpd,GAAjB,IAAwB9C,SAAUof,aCpKxCvE,GAAYjd,IAAOC,IAAV,+HACH,qBAAGY,MAAkB0hB,KAAKC,cAEtB,qBAAG3hB,MAAkB0hB,KAAKtS,cAKpCwS,GAAeziB,IAAOC,IAAV,qIASZyiB,GAAc1iB,IAAO2iB,MAAV,oKASXC,GAAY5iB,IAAO6iB,MAAV,qHASTC,GAAiB9iB,IAAOC,IAAV,qDAId8iB,GAAwB/iB,IAAOC,IAAV,yHA2CZ+iB,GApC0B,SAAC9d,GACxC,IAAM+d,EAAiB3S,iBAAuB,MACtC/O,EAAMC,cAAND,EACAmK,EAAiCxG,EAAjCwG,KAAMwX,EAA2Bhe,EAA3Bge,QAASnF,EAAkB7Y,EAAlB6Y,cAEfoF,EAASC,aAASF,EAASxX,EAAM,CAAEkV,UAAU,EAAMyC,WAAY,SAA/DF,KAQR,OACE,cAAC,GAAD,CAAWzC,GAAG,cAAd,SACE,eAACoC,GAAD,WACE,cAACL,GAAD,CAAc9X,IAAKsY,EAAnB,SACE,cAACP,GAAD,UACE,cAACE,GAAD,UACGO,EAAKhd,KAAI,SAACmd,GACT,OAAO,wBAAC,GAAD,2BAASA,EAAIC,UAAb,IAAuBxF,cAAeA,EAAe3M,IAAG,oBAAekS,EAAI5C,gBAK1F,cAACqC,GAAD,UACE,eAAC,IAAD,CAAQpe,QAAQ,OAAOxC,QAnBX,WAClB8gB,EAAe1S,QAAQiT,eAAe,CACpCC,SAAU,YAiBN,UACGliB,EAAE,UACH,cAAC,IAAD,CAAee,MAAM,uBCzClBohB,GArCuC,SAAC,GAAiC,IAKlFhQ,EALmDiQ,EAA8B,EAA9BA,wBAC/CC,EAAQC,cAARD,IACF1M,EAAWC,cACT5V,EAAMC,cAAND,EAGR,OAAQ2V,EAASoB,UACf,IAAK,SACH5E,EAAc,EACd,MACF,IAAK,iBACHA,EAAc,EACd,MACF,IAAK,kBACHA,EAAc,EACd,MACF,QACEA,EAAc,EAIlB,OACE,cAAC,GAAD,UACE,eAAC,IAAD,CAAYA,YAAaA,EAAaxL,MAAM,KAAKvD,QAAQ,SAAzD,UACE,cAAC,IAAD,CAAgBmf,GAAIC,IAAMC,GAAE,UAAKJ,GAAjC,SACGriB,EAAE,UAEL,cAAC,KAAD,CAAiB0iB,KAAMN,EAAvB,SACE,cAAC,IAAD,CAAgBjD,GAAG,wBAAwBoD,GAAIC,IAAMC,GAAE,UAAKJ,EAAL,YAAvD,SACGriB,EAAE,sBAUTQ,GAAU/B,IAAOC,IAAV,6MAUT,qBAAGY,MAAkBC,aAAaC,MCjDhCkc,GAAYjd,IAAOC,IAAV,yFAGX,qBAAGY,MAAkBC,aAAaC,MAwBvBmjB,GAnB8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClEC,EAAe,SAAC/Y,GAChB6Y,IAAa7Y,GACf8Y,EAAS9Y,IAIb,OACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAY3G,QAAQ,OAAOuD,MAAM,KAAKwY,GAAG,oBAAoBve,QAAS,kBAAMkiB,EAAaC,IAASC,OAAlG,SACE,cAAC,IAAD,CAAcjiB,MAAO6hB,IAAaG,IAASC,KAAO,UAAY,mBAEhE,cAAC,KAAD,CAAY5f,QAAQ,OAAOuD,MAAM,KAAKwY,GAAG,qBAAqBve,QAAS,kBAAMkiB,EAAaC,IAASE,QAAnG,SACE,cAAC,KAAD,CAAcliB,MAAO6hB,IAAaG,IAASE,MAAQ,UAAY,uBCAjEC,GAAmBzkB,IAAOC,IAAV,uTAUlB,qBAAGY,MAAkBC,aAAaC,MAQhC2jB,GAAgB1kB,IAAOC,IAAV,oIAKf6G,MAKE6d,GAAe3kB,IAAOC,IAAV,mEACZ6G,MAKA8d,GAAkB5kB,IAAOC,IAAV,gKAMjB,qBAAGY,MAAkBC,aAAaC,MAMhC8jB,GAAe7kB,IAAOC,IAAV,qSAWd,qBAAGY,MAAkBC,aAAaC,MAUhC+jB,GAAc9kB,YAAO+kB,KAAP/kB,CAAH,gGAOXglB,GAAgB,SAACC,EAAyBC,GAC9C,OAAID,GAAkBC,GACZD,EAAiBC,GAAcrU,eAAe,QAAS,CAAEE,sBAAuB,IAEtFkU,EACKA,EAAepU,eAAe,QAAS,CAAEE,sBAAuB,IAElE,MAkVMoU,GA/US,WACtB,IAAQC,EAASvB,cAATuB,KACA9M,EAAanB,cAAbmB,SACA/W,EAAMC,cAAND,EACR,EAA0C8jB,cAA5BC,EAAd,EAAQ5Z,KAAe6Z,EAAvB,EAAuBA,eACjBlR,EAAYyE,cAClB,EAA0B1X,mBAAS,IAAnC,mBAAOokB,EAAP,KAAcC,EAAd,KACA,EAAgCC,cAAhC,mBAAOvB,EAAP,KAAiBwB,EAAjB,KACQtT,EAAYgF,cAAZhF,QACR,EAAoCjR,mBAAS,OAA7C,mBAAOwkB,EAAP,KAAmBC,EAAnB,KACA,EAAwCC,cAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eACfC,EAAoB3V,iBAAO,GAE3B4V,EAAa5N,EAASC,SAAS,YAC/B4N,EAAa7N,EAASC,SAAS,WAC/B8D,GAAY8J,IAAeD,EAEjCE,YAAyBF,GAIzB,IAAMnI,GAAiB1L,KAAcA,GAAWkT,EAEhD,GAAoCc,YAAsBhK,GAA1D,qBAAOiK,GAAP,MAAmBC,GAAnB,MAEMC,GAAclB,EAAQmB,QAAO,SAACxM,GAAD,OAAuB,IAAbA,EAAK5D,KAAiC,OAApB4D,EAAK5V,aAAwBqiB,YAAczM,EAAK5D,QACzGsQ,GAAgBrB,EAAQmB,QAAO,SAACxM,GAAD,OAAuB,IAAbA,EAAK5D,KAAiC,OAApB4D,EAAK5V,aAAwBqiB,YAAczM,EAAK5D,QAC3GuQ,GAAgBtB,EAAQmB,QAAO,SAACxM,GAAD,OAAUyM,YAAczM,EAAK5D,QAE5DwQ,GAAkBL,GAAYC,QAClC,SAACxM,GAAD,OAAUA,EAAKI,UAAY,IAAIpM,IAAUgM,EAAKI,SAASpG,eAAeyG,cAAc,MAGhFoM,GAAsBH,GAAcF,QACxC,SAACxM,GAAD,OAAUA,EAAKI,UAAY,IAAIpM,IAAUgM,EAAKI,SAASpG,eAAeyG,cAAc,MAGhFqM,GAAsBH,GAAcH,QACxC,SAACxM,GAAD,OAAUA,EAAKI,UAAY,IAAIpM,IAAUgM,EAAKI,SAASpG,eAAeyG,cAAc,MAGhFsM,GAAYzY,uBAChB,SAAC0Y,GACC,IAAIC,EAA+CD,EAAe9gB,KAAI,SAAC8T,GACrE,IAAKA,EAAKkN,sBAAwBlN,EAAKmN,oBACrC,OAAOnN,EAET,IAAMoN,EAAiB,IAAIpZ,IAAUgM,EAAKkN,qBAAqB1Y,MAAMwL,EAAKmN,qBAC1E,EAAyC/K,EACrCiL,YAAW,IAAIrZ,IAAUgM,EAAKsN,YAAalT,EAAWgT,EAAgBpN,EAAKG,YAAYoN,IAAQC,UAC/F,CAAExC,eAAgB,EAAGC,aAAc,GAF/BD,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,aAIxB,OAAO,2BAAKjL,GAAZ,IAAkBrR,IAAKqc,EAAgBC,eAAcrJ,UAAWwL,OAGlE,GAAI7B,EAAO,CACT,IAAMkC,EAAiBpnB,EAASklB,EAAM5G,eACtCsI,EAAwBA,EAAsBT,QAAO,SAACxM,GACpD,OAAO3Z,EAAS2Z,EAAKa,SAAS8D,eAAerG,SAASmP,MAG1D,OAAOR,IAET,CAAC7S,EAAWmR,EAAOnJ,IAOrB,GAAwDjb,mBAlF1B,IAkF9B,qBAAOumB,GAAP,MAA6BC,GAA7B,MAEMC,GAAsBnmB,mBAAQ,WAClC,IAAIomB,EAAc,GAmClB,OAVIzL,IACFyL,EAA2Bd,GAAbV,GAAuBO,GAA6BL,KAEhEL,IACF2B,EAA2Bd,GAAbV,GAAuBQ,GAAiCH,KAEpET,IACF4B,EAA2Bd,GAAbV,GAAuBS,GAAiCH,KA9BtD,SAACmB,GACjB,OAAQnC,GACN,IAAK,MACH,OAAOoC,kBAAQD,GAAO,SAAC9N,GAAD,OAA+BA,EAAKrR,IAAMqR,EAAKiL,eAAc,QACrF,IAAK,aACH,OAAO8C,kBACLD,GACA,SAAC9N,GAAD,OAAgCA,EAAK5V,WAAakJ,OAAO0M,EAAK5V,WAAW4jB,MAAM,GAAI,IAAM,IACzF,QAEJ,IAAK,SACH,OAAOD,kBACLD,GACA,SAAC9N,GAAD,OAAgCA,EAAKI,SAAW9M,OAAO0M,EAAKI,SAASxB,UAAY,IACjF,QAEJ,IAAK,YACH,OAAOmP,kBAAQD,GAAO,SAAC9N,GAAD,OAA+B1M,OAAO0M,EAAK4B,aAAY,QAC/E,QACE,OAAOkM,GAcNG,CAAUJ,GAAaG,MAAM,EAAGN,MACtC,CACD/B,EACAY,GACAQ,GACAL,GACAC,GACAvK,EACA8J,EACAD,EACAa,GACAD,GACAR,GACAO,GACAc,KAGF1B,EAAkB1V,QAAUsX,GAAoB3hB,OAEhD8G,qBAAU,WACJgZ,GACF4B,IAAwB,SAACO,GACvB,OAAIA,GAAyBlC,EAAkB1V,QACtC4X,EA/Ie,GAiJjBA,OAGV,CAACnC,IAEJ,IAAMoC,GAAUP,GAAoB1hB,KAAI,SAAC8T,GACvC,IAAQ1V,EAAsB0V,EAAtB1V,MAAOC,EAAeyV,EAAfzV,WACT3B,EAAe0B,EAAMtB,QACrBL,EAAoB4B,EAAWvB,QAC/BS,EAAUuW,EAAKa,UAAYb,EAAKa,SAAS/V,MAAM,KAAK,GAAGgX,cAAcvb,QAAQ,UAAW,IAiC9F,MA/BsB,CACpBoI,IAAK,CACH/G,MAAOmjB,GAAc/K,EAAKrR,IAAKqR,EAAKiL,cACpC7O,IAAK4D,EAAK5D,IACVhS,WAAY4V,EAAK5V,WACjBX,UACAoX,SAAUb,EAAKa,SACfjY,eACAD,oBACAyR,YACA+I,cAAenD,EAAKrR,KAEtBqR,KAAM,CACJuD,MAAO9Z,EACP2S,IAAK4D,EAAK5D,IACV9R,MAAO0V,EAAK1V,MACZC,WAAYyV,EAAKzV,YAEnBoZ,OAAQ,CACN/E,SAAUtF,YAAiB,IAAItF,IAAUgM,EAAKI,SAASxB,WACvDxC,IAAK4D,EAAK5D,KAEZwF,UAAW,CACTA,UAAW5B,EAAK4B,WAElBxX,WAAY,CACVA,WAAY4V,EAAK5V,YAEnB8b,QAASlG,MAkFb,OACE,qCACE,eAACoO,EAAA,EAAD,WACE,cAAC,KAAD,CAASvE,GAAG,KAAK5b,MAAM,MAAM5F,MAAM,YAAYoC,GAAG,OAAlD,SACGnD,EAAE,WAEL,cAAC,KAAD,CAAS2G,MAAM,KAAK5F,MAAM,OAA1B,SACGf,EAAE,8BAEL,cAAC,IAAD,CAAS+mB,OAAK,EAACC,gBAAgB,SAASvE,GAAG,iBAAiBtD,GAAG,qBAA/D,SACE,eAAC,IAAD,CAAQxW,EAAE,IAAIvF,QAAQ,OAAtB,UACE,cAAC,KAAD,CAAMrC,MAAM,UAAUC,MAAI,EAACiF,SAAS,OAAOW,GAAG,MAA9C,SACG5G,EAAE,wBAEL,cAAC,IAAD,CAAkBe,MAAM,oBAI9B,eAACkmB,EAAA,EAAD,WACE,eAAC/D,GAAD,WACE,eAACI,GAAD,WACE,cAAC,GAAD,CAAYV,SAAUA,EAAUC,SAAU,SAAC9Y,GAAD,OAAoBqa,EAAYra,MAC1E,eAACoZ,GAAD,WACE,cAAC,KAAD,CACEhE,GAAG,oBACH7M,QAASyS,GACTplB,SAAU,kBAAMqlB,IAAeD,KAC/Bpe,MAAM,OAER,eAAC,KAAD,eAAQ3G,EAAE,qBAEZ,cAAC,GAAD,CAAgBoiB,wBAAyBmD,GAAoB5gB,OAAS,OAExE,eAAC0e,GAAD,WACE,eAACD,GAAD,WACE,cAAC,KAAD,CAAMjU,cAAc,YAApB,SAAiCnP,EAAE,aACnC,cAACknB,EAAA,EAAD,CACEC,QAAS,CACP,CACElL,MAAOjc,EAAE,OACTM,MAAO,OAET,CACE2b,MAAOjc,EAAE,OACTM,MAAO,OAET,CACE2b,MAAOjc,EAAE,cACTM,MAAO,cAET,CACE2b,MAAOjc,EAAE,UACTM,MAAO,UAET,CACE2b,MAAOjc,EAAE,aACTM,MAAO,cAGX8mB,eA/DiB,SAACC,GAC9B/C,EAAc+C,EAAO/mB,aAiEb,eAAC8iB,GAAD,CAActd,MAAO,CAAEwhB,WAAY,IAAnC,UACE,cAAC,KAAD,CAAMnY,cAAc,YAApB,SAAiCnP,EAAE,YACnC,cAAC,EAAD,CAAaL,SA5PC,SAACyP,GACzB8U,EAAS9U,EAAM7O,OAAOD,QA2P8BV,YAAY,0BA5I5C,WACpB,GAAIgjB,IAAaG,IAASE,OAAS4D,GAAQliB,OAAQ,CACjD,IAEMgd,EAFerC,GAEQ1a,KAAI,SAAC6b,GAAD,MAAa,CAC5CtB,GAAIsB,EAAOtB,GACXC,KAAMqB,EAAOrB,KACbnD,MAAOwE,EAAOxE,MACdsL,KAAM,SAAChT,EAAsBiT,GAC3B,OAAQ/G,EAAOrB,MACb,IAAK,OACH,OAAOoI,EAAErI,GAAK5K,EAAE4K,GAClB,IAAK,MACH,OAAI5K,EAAEyN,SAAS3a,IAAI/G,OAASknB,EAAExF,SAAS3a,IAAI/G,MAClC0L,OAAOuI,EAAEyN,SAAS3a,IAAI/G,OAAS0L,OAAOwb,EAAExF,SAAS3a,IAAI/G,OAGvD,EACT,IAAK,SACH,OAAOiU,EAAEyN,SAAS3F,OAAO/E,SAAWkQ,EAAExF,SAAS3F,OAAO/E,SACxD,QACE,OAAO,IAGb+H,SAAUoB,EAAOpB,aAGnB,OAAO,cAAC,GAAD,CAAOlV,KAAM0c,GAASlF,QAASA,EAASnF,cAAeA,IAGhE,OACE,eAAC9Z,EAAD,WACE,cAAC,IAAD,CAAOqkB,OAAK,EAAClD,KAAI,UAAKA,GAAtB,SACGyC,GAAoB1hB,KAAI,SAAC8T,GAAD,OACvB,cAAC,GAAD,CAEEA,KAAMA,EACNpR,WAAYmc,GAAc/K,EAAKrR,IAAKqR,EAAKiL,cACzC7Q,UAAWA,EACXhC,QAASA,EACT7O,SAAS,GALJyW,EAAK5D,UAShB,cAAC,IAAD,CAAOiS,OAAK,EAAClD,KAAI,UAAKA,EAAL,YAAjB,SACGyC,GAAoB1hB,KAAI,SAAC8T,GAAD,OACvB,cAAC,GAAD,CAEEA,KAAMA,EACNpR,WAAYmc,GAAc/K,EAAKrR,IAAKqR,EAAKiL,cACzC7Q,UAAWA,EACXhC,QAASA,EACT7O,SAAO,GALFyW,EAAK5D,UAShB,cAAC,IAAD,CAAOiS,OAAK,EAAClD,KAAI,UAAKA,EAAL,aAAjB,SACGyC,GAAoB1hB,KAAI,SAAC8T,GAAD,OACvB,cAAC,GAAD,CAEEA,KAAMA,EACNpR,WAAYmc,GAAc/K,EAAKrR,IAAKqR,EAAKiL,cACzC7Q,UAAWA,EACXhC,QAASA,EACT7O,SAAO,GALFyW,EAAK5D,aAqFf2S,GACA3W,IAAYkT,GAAkBe,IAC7B,cAAC,IAAD,CAAM1iB,eAAe,SAArB,SACE,cAACqlB,EAAA,EAAD,MAGJ,qBAAKte,IAAKob,IACV,cAACjB,GAAD,CAAaoE,IAAI,gCAAgCC,IAAI,uBAAuBtlB,MAAO,IAAKC,OAAQ,c,mKCtblGslB,EAAQppB,YAAOuP,IAAPvP,CAAH,gDACK,gBAAGa,EAAH,EAAGA,MAAH,SAAUoP,YAA+BpP,EAAMmB,OAAO2N,UAAUC,aAG1EyZ,EAAQrpB,YAAOid,IAAPjd,CAAH,2EAWIqoB,EAN+B,SAAC,GAAD,IAAGpY,EAAH,EAAGA,WAAYpK,EAAf,EAAeA,SAAaX,EAA5B,wBAC5C,cAACkkB,EAAD,yBAAOnZ,WAAYA,GAAgB/K,GAAnC,aACE,cAACmkB,EAAD,UAAQxjB,S,qRCHNyjB,EAA8B,SAACpkB,GACnC,IAAQ3D,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKoD,QAAQ,YAAY4kB,SAAO,EAACC,UAAW,cAAC,KAAD,CAAc3lB,MAAM,OAAOvB,MAAM,YAAY6F,GAAG,SAAcjD,GAA1G,aACG3D,EAAE,YAKHkoB,EAAmC,SAACvkB,GACxC,IAAQ3D,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKoD,QAAQ,UAAU4kB,SAAO,EAACC,UAAW,cAAC,IAAD,CAAe3lB,MAAM,OAAOvB,MAAM,UAAU6F,GAAG,SAAcjD,GAAvG,aACG3D,EAAE,iBAKHmoB,EAA8B,SAACxkB,GACnC,IAAQ3D,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKoD,QAAQ,aAAa4kB,SAAO,GAAKrkB,GAAtC,aACG3D,EAAE,YAuBHooB,EAAiC,SAACzkB,GACtC,IAAQ3D,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKoD,QAAQ,UAAU6kB,UAAW,cAAC,KAAD,CAAU3lB,MAAM,OAAOvB,MAAM,UAAU6F,GAAG,SAAcjD,GAA1F,aACG3D,EAAE,gBAKHqoB,EAA8B,SAAC1kB,GACnC,IAAQ3D,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKoD,QAAQ,UAAU6kB,UAAW,cAAC,KAAD,CAAW3lB,MAAM,OAAOvB,MAAM,UAAU6F,GAAG,SAAcjD,GAA3F,aACG3D,EAAE,YAKHsoB,EAAgC,SAAC3kB,GACrC,IAAQ3D,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKoD,QAAQ,eAAe6kB,UAAW,cAAC,IAAD,CAAW3lB,MAAM,OAAOvB,MAAM,eAAe6F,GAAG,SAAcjD,GAArG,aACG3D,EAAE,e,2IC7EHuoB,EAAiB9pB,IAAOC,IAAV,8RAOJ,qBAAGY,MAAkB2F,QAAQE,SACvB,qBAAG7F,MAAkBmB,OAAO+nB,kBAElC,qBAAGlpB,MAAkBmB,OAAOzB,SAItCypB,EAAwBhqB,IAAOC,IAAV,wTAKX,qBAAGY,MAAkBmB,OAAOzB,SAC/B,qBAAGM,MAAkBopB,SAAS3hB,YAOvC,qBAAGzH,MAAkBC,aAAaC,MAKhCmpB,EAAoBlqB,YAAOuP,IAAPvP,CAAH,2WAIP,qBAAGa,MAAkBmB,OAAOzB,SAOxC,qBAAGM,MAAkBC,aAAaC,MAIlC,SAACmE,GAAD,OACAA,EAAMilB,QACNvK,YADA,+XAEIkK,GAC2B,qBAAGjpB,MAAkBmB,OAAO+nB,kBACzC,qBAAGlpB,MAAkB8I,QAAQygB,YAI3CJ,GAIoB,qBAAGnpB,MAAkBmB,OAAO+nB,kBAGlC,qBAAGlpB,MAAkB8I,QAAQygB,gBAY7CC,EAAerqB,IAAOwI,GAAV,qGAIL,qBAAG3H,MAAkBopB,SAAS3hB,YAGrCgiB,EAAWtqB,IAAOuqB,GAAV,+GAII,qBAAG1pB,MAAkBmB,OAAO+nB,kBAiE/BtB,IAnDsC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,eAAmBzjB,EAAY,iBACxFslB,EAAcla,iBAAO,MAC3B,EAA4BlP,oBAAS,GAArC,mBAAO+oB,EAAP,KAAeM,EAAf,KACA,EAAsDrpB,mBAAS,GAA/D,mBAAOspB,EAAP,KAA4BC,EAA5B,KAEMC,EAAW,SAACja,GAChB8Z,GAAWN,GACXxZ,EAAMyK,mBAuBR,OAXApO,qBAAU,WACR,IAAM6d,EAAqB,WACzBJ,GAAU,IAIZ,OADAK,SAASC,iBAAiB,QAASF,GAC5B,WACLC,SAASE,oBAAoB,QAASH,MAEvC,IAGD,eAACX,EAAD,yBAAmBC,OAAQA,GAAYjlB,GAAvC,cACE,cAAC4kB,EAAD,CAAgB3nB,QAASyoB,EAAzB,SACE,cAAC,KAAD,UAAOlC,EAAQgC,GAAqBlN,UAEtC,cAAC,IAAD,CAAmBlb,MAAM,OAAOH,QAASyoB,IACzC,cAACZ,EAAD,UACE,cAACK,EAAD,CAAc1f,IAAK6f,EAAnB,SACG9B,EAAQviB,KAAI,SAACyiB,EAAQtc,GAAT,OACXA,IAAUoe,EACR,cAACJ,EAAD,CAAUnoB,SA9BG8oB,EA8BsB3e,EA9BI,WACjDqe,EAAuBM,GACvBR,GAAU,GAEN9B,GACFA,EAAeD,EAAQuC,MAyBf,SACE,cAAC,KAAD,UAAOrC,EAAOpL,SADgCoL,EAAOpL,OAGrD,KAjCU,IAACyN,e,qMCnGrBC,EAAuB,SAAC3mB,GAC5B,IAAMtB,EAA2B,QAAjBsB,EAAMP,OAAmBjB,IAAOC,KAAKC,QAAUsB,EAAMtB,QACrE,MAAM,kBAAN,OAAyBA,EAAzB,SAGWkoB,EAAgD,SAAC,GAAgD,IAA9CvmB,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,eAAmBK,EAAY,iBAC3G,OACE,cAAC,KAAD,aACEkmB,WAAYF,EAAqBtmB,GACjCymB,aAAcH,EAAqBrmB,IAC/BK,KASGomB,EAAwC,SAAC,GAAyB,IAAvB/mB,EAAsB,EAAtBA,MAAUW,EAAY,iBAC5E,OAAO,cAAC,KAAD,aAAiBgkB,IAAKgC,EAAqB3mB,IAAYW,M,+CCjC1D+jB,E,KAAUjpB,EAAOC,IAAV,miBA4BEgpB","file":"static/js/31.7e01946d.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport tokens from 'config/constants/tokens'\n\nconst getLiquidityUrlPathParts = ({\n  quoteTokenAddress,\n  tokenAddress,\n}: {\n  quoteTokenAddress: string\n  tokenAddress: string\n}): string => {\n  const wBnbAddress = tokens.wbnb.address\n  const firstPart = !quoteTokenAddress || quoteTokenAddress === wBnbAddress ? 'BNB' : quoteTokenAddress\n  const secondPart = !tokenAddress || tokenAddress === wBnbAddress ? 'BNB' : tokenAddress\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress}>{t('See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { CommunityTag, CoreTag } from 'components/Tags'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  token: Token\n  quoteToken: Token\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, isCommunityFarm, token, quoteToken }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          {multiplier ? (\n            <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n          ) : (\n            <Skeleton ml=\"4px\" width={42} height={28} />\n          )}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { formatBigNumber } from 'utils/formatBalance'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, Modal, LinkExternal, CalculateIcon, IconButton } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, formatNumber } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\ninterface DepositModalProps {\n  max: BigNumber\n  stakedBalance: BigNumber\n  multiplier?: string\n  lpPrice: BigNumber\n  lpLabel?: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  stakedBalance,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  multiplier,\n  displayApr,\n  lpPrice,\n  lpLabel,\n  apr,\n  addLiquidityUrl,\n  cakePrice,\n}) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const lpTokensToStake = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = lpTokensToStake.times(lpPrice)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: cakePrice.toNumber(),\n  })\n\n  const annualRoi = cakePrice.times(interestBreakdown[3])\n  const formattedAnnualRoi = formatNumber(\n    annualRoi.toNumber(),\n    annualRoi.gt(10000) ? 0 : 2,\n    annualRoi.gt(10000) ? 0 : 2,\n  )\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n        stakingTokenBalance={stakedBalance.plus(max)}\n        stakingTokenSymbol={tokenName}\n        stakingTokenPrice={lpPrice.toNumber()}\n        earningTokenPrice={cakePrice.toNumber()}\n        apr={apr}\n        multiplier={multiplier}\n        displayApr={displayApr}\n        linkHref={addLiquidityUrl}\n        isFarm\n        initialValue={val}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text mr=\"8px\" color=\"textSubtle\">\n          {t('Annual ROI at current rates')}:\n        </Text>\n        <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n          <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </AnnualRoiContainer>\n      </Flex>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={\n            pendingTx || !lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import { useCallback } from 'react'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useUnstakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstakeFarm(masterChefContract, pid, amount)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useCallback } from 'react'\nimport { stakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useStakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stakeFarm(masterChefContract, pid, amount)\n      console.info(txHash)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/farms/hooks'\nimport { getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\nimport useStakeFarms from '../../hooks/useStakeFarms'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  multiplier?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  multiplier,\n  apr,\n  displayApr,\n  addLiquidityUrl,\n  cakePrice,\n  lpLabel,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return '<0.0000001'\n    }\n    if (stakedBalanceBigNumber.gt(0)) {\n      return stakedBalanceBigNumber.toFixed(8, BigNumber.ROUND_DOWN)\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      multiplier={multiplier}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport useToast from 'hooks/useToast'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Balance from 'components/Balance'\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const cakePrice = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `${t('Harvested')}!`,\n              t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\n            )\n          } catch (e) {\n            toastError(\n              t('Error'),\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n        }}\n      >\n        {t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport { useMasterchef } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await callWithGasPrice(lpContract, 'approve', [\n        masterChefContract.address,\n        ethers.constants.MaxUint256,\n      ])\n      const receipt = await tx.wait()\n      return receipt.status\n    } catch (e) {\n      return false\n    }\n  }, [lpContract, masterChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveFarm\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\nimport useApproveFarm from '../../hooks/useApproveFarm'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, cakePrice, lpLabel }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        apr={farm.apr}\n        lpLabel={lpLabel}\n        cakePrice={cakePrice}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nexport interface ApyButtonProps {\n  variant: 'text' | 'text-and-button'\n  pid: number\n  lpSymbol: string\n  lpLabel?: string\n  multiplier: string\n  cakePrice?: BigNumber\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  variant,\n  pid,\n  lpLabel,\n  lpSymbol,\n  cakePrice,\n  apr,\n  multiplier,\n  displayApr,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      stakingTokenBalance={stakedBalance.plus(tokenBalance)}\n      stakingTokenSymbol={lpSymbol}\n      stakingTokenPrice={lpPrice.toNumber()}\n      earningTokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      multiplier={multiplier}\n      displayApr={displayApr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <ApyLabelContainer alignItems=\"center\" onClick={handleClickButton}>\n      {displayApr}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" scale=\"sm\" ml=\"4px\">\n          <CalculateIcon width=\"18px\" />\n        </IconButton>\n      )}\n    </ApyLabelContainer>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { DeserializedFarm } from 'state/types'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('CAKE + Fees')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          isCommunityFarm={farm.isCommunity}\n          token={farm.token}\n          quoteToken={farm.quoteToken}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text>{t('APR')}:</Text>\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr ? (\n                <ApyButton\n                  variant=\"text-and-button\"\n                  pid={farm.pid}\n                  lpSymbol={farm.lpSymbol}\n                  multiplier={farm.multiplier}\n                  lpLabel={lpLabel}\n                  addLiquidityUrl={addLiquidityUrl}\n                  cakePrice={cakePrice}\n                  apr={farm.apr}\n                  displayApr={displayApr}\n                />\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Earn')}:</Text>\n          <Text bold>{earnLabel}</Text>\n        </Flex>\n        <CardActionsContainer\n          farm={farm}\n          lpLabel={lpLabel}\n          account={account}\n          cakePrice={cakePrice}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </FarmCardInnerContainer>\n\n      <ExpandingWrapper>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\n            infoAddress={`/info/pool/${lpAddress}`}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n            addLiquidityUrl={addLiquidityUrl}\n          />\n        )}\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  pid: number\n  lpLabel: string\n  lpSymbol: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  pid,\n  lpLabel,\n  lpSymbol,\n  multiplier,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <ApyButton\n          variant={hideButton ? 'text' : 'text-and-button'}\n          pid={pid}\n          lpSymbol={lpSymbol}\n          lpLabel={lpLabel}\n          multiplier={multiplier}\n          cakePrice={cakePrice}\n          apr={originalValue}\n          displayApr={value}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>\n      {!isDesktop && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading>{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Harvested')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice, usePriceCakeBusd } from 'state/farms/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  lpLabel?: string\n  displayApr?: string\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  apr,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n  displayApr,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const cakePrice = usePriceCakeBusd()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = getAddress(lpAddresses)\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading>{displayBalance()}</Heading>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake').toUpperCase()}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBscScanLink } from 'utils'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = getBscScanLink(lpAddress, 'address')\n  const info = `/info/pool/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/farms/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isSmallerScreen} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n  scroll-margin-top: 64px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container id=\"farms-table\">\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem id=\"finished-farms-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { useFarms, usePollFarmsWithUserData, usePriceCakeBusd } from 'state/farms/hooks'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly, useUserFarmsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Loading from 'components/Loading'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema } from './components/types'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\n  if (cakeRewardsApr && lpRewardsApr) {\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const chosenFarmsLength = useRef(0)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsWithUserData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: DeserializedFarm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteTokenPriceBusd) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n\n  const chosenFarmsMemoized = useMemo(() => {\n    let chosenFarms = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  chosenFarmsLength.current = chosenFarmsMemoized.length\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n        if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n        }\n        return farmsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const rowData = chosenFarmsMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        pid: farm.pid,\n        multiplier: farm.multiplier,\n        lpLabel,\n        lpSymbol: farm.lpSymbol,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/history`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/archived`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n      </FlexLayout>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {t('Farms')}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          {t('Stake LP tokens to earn.')}\n        </Heading>\n        <NavLink exact activeClassName=\"active\" to=\"/farms/auction\" id=\"lottery-pot-banner\">\n          <Button p=\"0\" variant=\"text\">\n            <Text color=\"primary\" bold fontSize=\"16px\" mr=\"4px\">\n              {t('Community Auctions')}\n            </Text>\n            <ArrowForwardIcon color=\"primary\" />\n          </Button>\n        </NavLink>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle\n                id=\"staked-only-farms\"\n                checked={stakedOnly}\n                onChange={() => setStakedOnly(!stakedOnly)}\n                scale=\"sm\"\n              />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\">\n            <Loading />\n          </Flex>\n        )}\n        <div ref={observerRef} />\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n"],"sourceRoot":""}